{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u306f\u3058\u3081\u306b","text":""},{"location":"#516","title":"5/16\u306e\u30b4\u30fc\u30eb","text":"<p>\u672c\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u901a\u3058\u3066\u300cCOBOL\u7d4c\u9a13\u8005\u304cPython\u3068Flask\u3067API\u958b\u767a\u3092\u81ea\u4fe1\u3092\u6301\u3063\u3066\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u300d\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002</p> <ul> <li>Python\u306e\u57fa\u790e\u6587\u6cd5\u30fb\u8003\u3048\u65b9\u3092\u4f53\u7cfb\u7684\u306b\u7406\u89e3\u3059\u308b</li> <li>Flask\u3067\u5b9f\u8df5\u7684\u306aWeb API\u3092\u4f5c\u308c\u308b\u3088\u3046\u306b\u306a\u308b</li> <li>\u73fe\u5834\u3067\u5f79\u7acb\u3064\u30c8\u30e9\u30d6\u30eb\u5bfe\u5fdc\u3084\u958b\u767a\u30ce\u30a6\u30cf\u30a6\u3082\u8eab\u306b\u3064\u3051\u308b</li> </ul>"},{"location":"#pythonflask","title":"Python/Flask\u306e\u73fe\u5834\u6d3b\u7528\u4f8b","text":"<ul> <li>\u793e\u5185\u30b7\u30b9\u30c6\u30e0\u306e\u81ea\u52d5\u5316\uff1a\u30d0\u30c3\u30c1\u51e6\u7406\u3084\u30c7\u30fc\u30bf\u5909\u63db\u3092Python\u3067\u52b9\u7387\u5316</li> <li>Web API\u958b\u767a\uff1a\u65e2\u5b58\u306eCOBOL\u8cc7\u7523\u3068\u9023\u643a\u3059\u308b\u65b0\u3057\u3044API\u3092Flask\u3067\u69cb\u7bc9</li> <li>\u30c7\u30fc\u30bf\u5206\u6790\u30fb\u30ec\u30dd\u30fc\u30c8\u81ea\u52d5\u751f\u6210\uff1aPython\u306e\u8c4a\u5bcc\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u696d\u52d9\u30c7\u30fc\u30bf\u3092\u53ef\u8996\u5316</li> <li>\u30af\u30e9\u30a6\u30c9\u79fb\u884c\uff1aPython/Flask\u3067\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5316\u3057\u3001\u30ec\u30ac\u30b7\u30fc\u8131\u5374</li> </ul>"},{"location":"#_2","title":"\u53d7\u8b1b\u8005\u3078\u306e\u30e1\u30c3\u30bb\u30fc\u30b8","text":"<ul> <li>\u300cCOBOL\u3057\u304b\u77e5\u3089\u306a\u3044\u300d\u300cWeb\u958b\u767a\u306f\u521d\u3081\u3066\u300d\u3067\u3082\u5927\u4e08\u592b\uff01</li> <li>\u3064\u307e\u305a\u304d\u3084\u3059\u3044\u30dd\u30a4\u30f3\u30c8\u30fb\u73fe\u5834\u3067\u3088\u304f\u3042\u308b\u8ab2\u984c\u3082\u4e01\u5be7\u306b\u89e3\u8aac\u3057\u307e\u3059</li> <li>\u30cf\u30f3\u30ba\u30aa\u30f3\u4e2d\u5fc3\u306a\u306e\u3067\u3001\u624b\u3092\u52d5\u304b\u3057\u306a\u304c\u3089\"\u5b9f\u52d9\u3067\u4f7f\u3048\u308b\u529b\"\u304c\u8eab\u306b\u3064\u304d\u307e\u3059</li> </ul>"},{"location":"#_3","title":"\u5b66\u7fd2\u306e\u9032\u3081\u65b9","text":"<ul> <li>\u5404\u7ae0\u3054\u3068\u306b\u300c\u306a\u305c\u5b66\u3076\u306e\u304b\u300d\u300c\u3069\u3053\u3067\u5f79\u7acb\u3064\u304b\u300d\u3092\u660e\u793a</li> <li>\u7df4\u7fd2\u554f\u984c\u3084\u767a\u5c55\u8ab2\u984c\u3067\u7406\u89e3\u3092\u6df1\u3081\u308b</li> <li>\u5206\u304b\u3089\u306a\u3044\u3053\u3068\u306f\u6c17\u8efd\u306b\u8cea\u554f\u30fb\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046</li> </ul> <p>\u3055\u3042\u3001\u65b0\u3057\u3044Python/Flask\u306e\u4e16\u754c\u3078\u4e00\u6b69\u8e0f\u307f\u51fa\u3057\u307e\u3057\u3087\u3046\uff01 </p>"},{"location":"appendix/","title":"\u4ed8\u9332","text":""},{"location":"appendix/#_2","title":"\u4fbf\u5229\u306a\u30c4\u30fc\u30eb\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea","text":"<ul> <li>\u958b\u767a\u74b0\u5883: VS Code, PyCharm</li> <li>\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406: pip, pipenv, poetry</li> <li>\u30c6\u30b9\u30c8: pytest, unittest, coverage</li> <li>Web\u958b\u767a: Flask, Django, FastAPI</li> <li>\u30c7\u30fc\u30bf\u51e6\u7406: pandas, numpy</li> <li>\u53ef\u8996\u5316: matplotlib, seaborn</li> <li>API\u958b\u767a: Flask-RESTful, FastAPI, flasgger</li> <li>DB\u64cd\u4f5c: SQLAlchemy, SQLite, PostgreSQL</li> </ul>"},{"location":"appendix/#_3","title":"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc\u3068\u30c7\u30d0\u30c3\u30b0\u65b9\u6cd5","text":"<ul> <li>\u30a4\u30f3\u30c7\u30f3\u30c8\u30a8\u30e9\u30fc\u3001\u30b9\u30da\u30eb\u30df\u30b9\u3001\u578b\u30a8\u30e9\u30fc</li> <li>\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30b3\u30d4\u30da\u3057\u3066\u691c\u7d22</li> <li>print/logging\u3067\u5024\u3092\u78ba\u8a8d</li> <li>Python\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084Stack Overflow\u3082\u6d3b\u7528</li> </ul>"},{"location":"appendix/#python","title":"Python\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04","text":"<ul> <li>PEP 8: Python\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9</li> <li>\u30b3\u30e1\u30f3\u30c8\u30fb\u547d\u540d\u898f\u5247\u30fb\u30a4\u30f3\u30c7\u30f3\u30c8</li> <li>Black, flake8, isort\u7b49\u306e\u81ea\u52d5\u6574\u5f62\u30c4\u30fc\u30eb</li> </ul>"},{"location":"appendix/#_4","title":"\u4fbf\u5229\u306a\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u30fb\u65e5\u672c\u8a9e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3","text":"<ul> <li>Python\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08\u65e5\u672c\u8a9e\uff09</li> <li>Flask\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08\u65e5\u672c\u8a9e\uff09</li> <li>PyCon JP</li> <li>Qiita Python\u30bf\u30b0</li> <li>Zenn Python\u30bf\u30b0</li> <li>teratail Python\u30bf\u30b0</li> <li>Stack Overflow Python</li> </ul> <p>\u5206\u304b\u3089\u306a\u3044\u3053\u3068\u306f\u300c\u516c\u5f0f\u30fb\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fb\u691c\u7d22\u300d\u3092\u30d5\u30eb\u6d3b\u7528\u3057\u307e\u3057\u3087\u3046\uff01 </p>"},{"location":"base-content/","title":"Python &amp; Flask \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0","text":""},{"location":"base-content/#1","title":"\u7b2c1\u7ae0: \u306f\u3058\u3081\u306b","text":""},{"location":"base-content/#11","title":"1.1 \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u76ee\u7684","text":"<p>\u672c\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u76ee\u7684\u306f\u3001COBOL\u306a\u3069\u306e\u7d4c\u9a13\u3092\u6301\u3064\u30a8\u30f3\u30b8\u30cb\u30a2\u304c\u3001Python\u306e\u57fa\u672c\u7684\u306a\u6587\u6cd5\u3084\u30c6\u30af\u30cb\u30c3\u30af\u3092\u7fd2\u5f97\u3057\u3001Flask\u3092\u4f7f\u3063\u305fAPI\u958b\u767a\u3092\u5b9f\u8df5\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u3067\u3059\u30023\u6642\u9593\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u901a\u3058\u3066\u3001\u4ee5\u4e0b\u3092\u5b66\u3073\u307e\u3059\uff1a</p> <ul> <li>Python\u306e\u57fa\u790e\u77e5\u8b58\u3068\u74b0\u5883\u69cb\u7bc9</li> <li>\u57fa\u672c\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u69cb\u9020\u3068\u6587\u6cd5</li> <li>Flask\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306eWeb API\u958b\u767a</li> <li>\u5b9f\u8df5\u7684\u306a\u30cf\u30f3\u30ba\u30aa\u30f3\u6f14\u7fd2</li> </ul>"},{"location":"base-content/#12-python","title":"1.2 Python\u306e\u4f4d\u7f6e\u3065\u3051\u3068\u7279\u5fb4","text":"<p>Python\u306f\u6c4e\u7528\u6027\u304c\u9ad8\u304f\u3001Web\u958b\u767a\u304b\u3089\u30c7\u30fc\u30bf\u5206\u6790\u3001\u6a5f\u68b0\u5b66\u7fd2\u3001AI\u307e\u3067\u5e45\u5e83\u304f\u6d3b\u7528\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002\u7279\u306bWeb API\u958b\u767a\u306b\u304a\u3044\u3066\u306f\u3001\u30b7\u30f3\u30d7\u30eb\u3067\u5f37\u529b\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bFlask\u3084Django\u304c\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>Python\u306f\u8fd1\u5e74\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0\u3067\u5e38\u306b\u4e0a\u4f4d\u306b\u4f4d\u7f6e\u3057\u3001\u591a\u304f\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u9078\u3070\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"base-content/#13","title":"1.3 \u5b66\u7fd2\u306e\u9032\u3081\u65b9","text":"<p>\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306f\u3001\u8b1b\u7fa9\u3068\u30cf\u30f3\u30ba\u30aa\u30f3\u3092\u4ea4\u4e92\u306b\u884c\u3044\u306a\u304c\u3089\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\u5404\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u5f8c\u306b\u7df4\u7fd2\u554f\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u7406\u89e3\u3092\u6df1\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u8cea\u554f\u306f\u3044\u3064\u3067\u3082\u6b53\u8fce\u3057\u307e\u3059\u3002</p>"},{"location":"base-content/#2-python","title":"\u7b2c2\u7ae0: Python\u3068\u306f\uff1f","text":""},{"location":"base-content/#21-python","title":"2.1 Python\u306e\u54f2\u5b66","text":"<p>Python\u306f\u3001\u8aad\u307f\u3084\u3059\u3055\u3068\u751f\u7523\u6027\u3092\u91cd\u8996\u3057\u305f\u3001\u30b7\u30f3\u30d7\u30eb\u3067\u660e\u78ba\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002</p> <pre><code>import this  # Python\u306e\u54f2\u5b66\u3092\u8868\u793a\n</code></pre> <p>\u5b9f\u884c\u3059\u308b\u3068\u300cThe Zen of Python\u300d\u304c\u8868\u793a\u3055\u308c\u3001\u305d\u306e\u4e2d\u306b\u306f\u300c\u8aad\u307f\u3084\u3059\u3055\u304c\u5927\u4e8b\u300d\u300c\u30b7\u30f3\u30d7\u30eb\u3055\u304c\u8907\u96d1\u3055\u306b\u52dd\u308b\u300d\u3068\u3044\u3063\u305f\u8003\u3048\u65b9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"base-content/#22-python","title":"2.2 Python\u306e\u4e3b\u306a\u7279\u5fb4","text":"<ul> <li>\u8aad\u307f\u3084\u3059\u3044\u30b7\u30f3\u30bf\u30c3\u30af\u30b9: \u30a4\u30f3\u30c7\u30f3\u30c8\u306b\u3088\u308b\u69cb\u9020\u5b9a\u7fa9</li> <li>\u52d5\u7684\u578b\u4ed8\u3051: \u5909\u6570\u306e\u578b\u3092\u4e8b\u524d\u306b\u5ba3\u8a00\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044</li> <li>\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u8a00\u8a9e: \u30b3\u30f3\u30d1\u30a4\u30eb\u4e0d\u8981\u3067\u5b9f\u884c\u53ef\u80fd</li> <li>\u30de\u30eb\u30c1\u30d1\u30e9\u30c0\u30a4\u30e0: \u624b\u7d9a\u304d\u578b\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u578b\u3001\u95a2\u6570\u578b\u306a\u3069\u69d8\u3005\u306a\u30b9\u30bf\u30a4\u30eb\u306b\u5bfe\u5fdc</li> <li>\u8c4a\u5bcc\u306a\u30e9\u30a4\u30d6\u30e9\u30ea: \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea</li> </ul>"},{"location":"base-content/#23-python","title":"2.3 \u306a\u305cPython\u3092\u4f7f\u3046\u306e\u304b\uff1f","text":"<ul> <li>\u8aad\u307f\u3084\u3059\u304f\u3001\u4fdd\u5b88\u6027\u304c\u9ad8\u3044: \u660e\u5feb\u306a\u69cb\u6587\u3067\u3001\u4ed6\u306e\u958b\u767a\u8005\u304c\u8aad\u307f\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u308b</li> <li>\u751f\u7523\u6027: \u5c11\u306a\u3044\u30b3\u30fc\u30c9\u884c\u6570\u3067\u591a\u304f\u306e\u51e6\u7406\u3092\u5b9f\u73fe\u53ef\u80fd</li> <li>\u591a\u7528\u9014: Web\u958b\u767a\u3001\u30c7\u30fc\u30bf\u5206\u6790\u3001AI\u3001\u81ea\u52d5\u5316\u306a\u3069\u69d8\u3005\u306a\u5206\u91ce\u3067\u6d3b\u7528\u53ef\u80fd</li> <li>\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304c\u6d3b\u767a: \u8c4a\u5bcc\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u60c5\u5831\u6e90</li> <li>\u4f01\u696d\u3067\u306e\u63a1\u7528\u5897\u52a0: \u591a\u304f\u306e\u4f01\u696d\u304cPython\u3092\u63a1\u7528\u3057\u3001\u9700\u8981\u304c\u9ad8\u307e\u3063\u3066\u3044\u308b</li> </ul>"},{"location":"base-content/#24-python","title":"2.4 Python\u306e\u7528\u9014","text":"<ul> <li>Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a</li> <li>\u30c7\u30fc\u30bf\u5206\u6790\u30fb\u53ef\u8996\u5316</li> <li>\u6a5f\u68b0\u5b66\u7fd2\u30fbAI</li> <li>\u81ea\u52d5\u5316\u30b9\u30af\u30ea\u30d7\u30c8</li> <li>\u30b2\u30fc\u30e0\u958b\u767a</li> <li>IoT\u30c7\u30d0\u30a4\u30b9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0</li> </ul>"},{"location":"base-content/#3-python","title":"\u7b2c3\u7ae0: Python\u74b0\u5883\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\uff08\u30cf\u30f3\u30ba\u30aa\u30f3\uff09","text":""},{"location":"base-content/#31-python","title":"3.1 Python\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<pre><code># Python 3.11\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npyenv install 3.11.0\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u306ePython\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\npyenv versions\n</code></pre>"},{"location":"base-content/#32","title":"3.2 \u4eee\u60f3\u74b0\u5883\u306e\u4f5c\u6210\u3068\u6d3b\u7528","text":"<p>\u4eee\u60f3\u74b0\u5883\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u6bce\u306b\u7570\u306a\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u91cd\u8981\u3067\u3059\u3002</p> <pre><code># \u4eee\u60f3\u74b0\u5883\u3092\u4f5c\u6210\npyenv virtualenv 3.11.0 flask-training\n\n# \u4eee\u60f3\u74b0\u5883\u3092\u6709\u52b9\u5316\npyenv activate flask-training\n\n# \u73fe\u5728\u306e\u74b0\u5883\u3092\u78ba\u8a8d\npython --version\npip --version\n</code></pre>"},{"location":"base-content/#33","title":"3.3 \u57fa\u672c\u7684\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406","text":"<pre><code># pip\u306e\u66f4\u65b0\npip install --upgrade pip\n\n# \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip install requests\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u78ba\u8a8d\npip list\n\n# \u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\npip freeze &gt; requirements.txt\n\n# requirements\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip install -r requirements.txt\n</code></pre>"},{"location":"base-content/#4-python","title":"\u7b2c4\u7ae0: Python\u57fa\u672c\u6587\u6cd5","text":""},{"location":"base-content/#41","title":"4.1 \u5909\u6570\u3068\u578b","text":"<p>Python\u306f\u52d5\u7684\u578b\u4ed8\u3051\u8a00\u8a9e\u3067\u3001\u5909\u6570\u306e\u578b\u3092\u81ea\u52d5\u3067\u5224\u65ad\u3057\u307e\u3059\u3002</p> <pre><code># \u57fa\u672c\u7684\u306a\u578b\nnum = 10        # \u6574\u6570 (int)\npi = 3.14       # \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (float)\ntext = \"Hello\"  # \u6587\u5b57\u5217 (str)\nis_active = True  # \u771f\u507d\u5024 (bool)\nnothing = None  # None\u578b\n\n# \u578b\u306e\u78ba\u8a8d\nprint(type(num))      # &lt;class 'int'&gt;\nprint(type(pi))       # &lt;class 'float'&gt;\nprint(type(text))     # &lt;class 'str'&gt;\nprint(type(is_active))  # &lt;class 'bool'&gt;\n</code></pre> <p>\u578b\u5909\u63db\uff08\u30ad\u30e3\u30b9\u30c8\uff09</p> <pre><code># \u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\nnum_str = \"42\"\nnum_int = int(num_str)\nnum_float = float(num_str)\n\n# \u6570\u5024\u304b\u3089\u6587\u5b57\u5217\u3078\nback_to_str = str(num_int)\n</code></pre> <p>\u6587\u5b57\u5217\u64cd\u4f5c</p> <pre><code># \u6587\u5b57\u5217\u9023\u7d50\ngreeting = \"Hello\"\nname = \"Python\"\nmessage = greeting + \", \" + name + \"!\"  # \"Hello, Python!\"\n\n# f-strings\uff08Python 3.6\u4ee5\u964d\uff09\nmessage = f\"{greeting}, {name}!\"  # \"Hello, Python!\"\n\n# \u6587\u5b57\u5217\u30e1\u30bd\u30c3\u30c9\nprint(\"python\".upper())  # \"PYTHON\"\nprint(\"PYTHON\".lower())  # \"python\"\nprint(\"  python  \".strip())  # \"python\"\nprint(\"python\".replace(\"p\", \"j\"))  # \"jython\"\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u540d\u524d\u3068\u5e74\u9f62\u3092\u5909\u6570\u306b\u5165\u308c\u3066\u3001\u81ea\u5df1\u7d39\u4ecb\u6587\u3092\u4f5c\u6210\u3057\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002    * \u4f8b\uff1a\u300c\u79c1\u306e\u540d\u524d\u306f\u3007\u3007\u3067\u3001\u5e74\u9f62\u306f\u3007\u3007\u6b73\u3067\u3059\u3002\u300d * \u5c0f\u6570\u70b9\u3092\u542b\u3080\u6570\u5024\u3092\u5165\u529b\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u3001\u6574\u6570\u90e8\u5206\u3068\u5c0f\u6570\u90e8\u5206\u3092\u5225\u3005\u306b\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"base-content/#42","title":"4.2 \u6761\u4ef6\u5206\u5c90","text":"<p>\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u51e6\u7406\u3092\u5909\u66f4\u3057\u307e\u3059\u3002</p> <pre><code>age = 20\nif age &gt;= 18:\n    print(\"\u6210\u4eba\")\nelse:\n    print(\"\u672a\u6210\u5e74\")\n\n# \u8907\u6570\u6761\u4ef6\nscore = 85\nif score &gt;= 90:\n    grade = \"A\"\nelif score &gt;= 80:\n    grade = \"B\"\nelif score &gt;= 70:\n    grade = \"C\"\nelse:\n    grade = \"D\"\nprint(f\"\u3042\u306a\u305f\u306e\u6210\u7e3e\u306f{grade}\u3067\u3059\")\n\n# \u8ad6\u7406\u6f14\u7b97\u5b50\nis_student = True\nhas_id = True\nif is_student and has_id:\n    print(\"\u5b66\u751f\u5272\u5f15\u304c\u9069\u7528\u3055\u308c\u307e\u3059\")\n\n# \u4e09\u9805\u6f14\u7b97\u5b50\nstatus = \"\u6210\u4eba\" if age &gt;= 18 else \"\u672a\u6210\u5e74\"\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u30e6\u30fc\u30b6\u30fc\u304c\u5165\u529b\u3057\u305f\u6570\u5024\u3092\u53d7\u3051\u53d6\u308a\u3001\u5076\u6570\u304b\u5947\u6570\u304b\u3092\u5224\u5b9a\u3057\u3001\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 * \u5e74\u9f62\u3068\u6027\u5225\u3092\u5165\u529b\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u3067\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002   * \u7537\u6027\u306720\u6b73\u4ee5\u4e0a: \"\u7537\u6027\u6210\u4eba\"   * \u5973\u6027\u306720\u6b73\u4ee5\u4e0a: \"\u5973\u6027\u6210\u4eba\"   * 20\u6b73\u672a\u6e80: \"\u672a\u6210\u5e74\"</p>"},{"location":"base-content/#43","title":"4.3 \u30eb\u30fc\u30d7\uff08\u7e70\u308a\u8fd4\u3057\uff09","text":"<p>\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3057\u884c\u3044\u307e\u3059\u3002</p> <pre><code># for \u30eb\u30fc\u30d7\nfor i in range(5):  # 0, 1, 2, 3, 4\n    print(i)\n\n# \u30ea\u30b9\u30c8\u3067\u306e\u30eb\u30fc\u30d7\nfruits = [\"apple\", \"banana\", \"cherry\"]\nfor fruit in fruits:\n    print(fruit)\n\n# \u8f9e\u66f8\u3067\u306e\u30eb\u30fc\u30d7\nperson = {\"name\": \"Alice\", \"age\": 25}\nfor key in person:\n    print(f\"{key}: {person[key]}\")\n\n# key, value\u306e\u30eb\u30fc\u30d7\nfor key, value in person.items():\n    print(f\"{key}: {value}\")\n\n# while \u30eb\u30fc\u30d7\ncount = 0\nwhile count &lt; 5:\n    print(count)\n    count += 1\n\n# break \u3068 continue\nfor i in range(10):\n    if i == 3:\n        continue  # \u3053\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u30b9\u30ad\u30c3\u30d7\n    if i == 7:\n        break  # \u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\n    print(i)\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * 1\u304b\u3089100\u307e\u3067\u306e\u6570\u5024\u306e\u3046\u3061\u3001\u5076\u6570\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3057\u3066\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 * FizzBuzz\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u30021\u304b\u308930\u307e\u3067\u306e\u6570\u5024\u3092\u30eb\u30fc\u30d7\u3057\u3001\u4ee5\u4e0b\u306e\u30eb\u30fc\u30eb\u3067\u51fa\u529b\u3057\u307e\u3059\u3002   * 3\u306e\u500d\u6570: \"Fizz\"   * 5\u306e\u500d\u6570: \"Buzz\"   * 3\u30685\u306e\u4e21\u65b9\u306e\u500d\u6570: \"FizzBuzz\"   * \u305d\u308c\u4ee5\u5916: \u6570\u5024\u305d\u306e\u3082\u306e</p>"},{"location":"base-content/#44","title":"4.4 \u95a2\u6570","text":"<p>\u518d\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u3067\u3059\u3002</p> <pre><code># \u57fa\u672c\u7684\u306a\u95a2\u6570\ndef greet(name):\n    \"\"\"\u6328\u62f6\u3092\u8fd4\u3059\u95a2\u6570\"\"\"\n    return f\"Hello, {name}!\"\n\nprint(greet(\"Alice\"))  # \"Hello, Alice!\"\n\n# \u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\ndef greet_with_time(name, time=\"morning\"):\n    return f\"Good {time}, {name}!\"\n\nprint(greet_with_time(\"Bob\"))  # \"Good morning, Bob!\"\nprint(greet_with_time(\"Carol\", \"evening\"))  # \"Good evening, Carol!\"\n\n# \u53ef\u5909\u9577\u5f15\u6570\ndef sum_all(*numbers):\n    total = 0\n    for num in numbers:\n        total += num\n    return total\n\nprint(sum_all(1, 2, 3, 4, 5))  # 15\n\n# \u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\ndef build_profile(first_name, last_name, **user_info):\n    profile = {\n        'first_name': first_name,\n        'last_name': last_name\n    }\n    profile.update(user_info)\n    return profile\n\nuser = build_profile('Albert', 'Einstein',\n                    location='Princeton',\n                    field='Physics')\nprint(user)\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u8907\u6570\u306e\u6570\u5024\u3092\u30ea\u30b9\u30c8\u3067\u53d7\u3051\u53d6\u308a\u3001\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u3092\u8fd4\u3059\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 * \u6442\u6c0f\u304b\u3089\u83ef\u6c0f\u3001\u304a\u3088\u3073\u83ef\u6c0f\u304b\u3089\u6442\u6c0f\u306b\u5909\u63db\u3059\u308b2\u3064\u306e\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u306b\u5fdc\u3058\u3066\u9069\u5207\u306a\u5909\u63db\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002   * \u6442\u6c0f\u304b\u3089\u83ef\u6c0f: F = C \u00d7 9/5 + 32   * \u83ef\u6c0f\u304b\u3089\u6442\u6c0f: C = (F - 32) \u00d7 5/9</p>"},{"location":"base-content/#45","title":"4.5 \u30ea\u30b9\u30c8\u3068\u8f9e\u66f8","text":"<p>\u8907\u6570\u306e\u30c7\u30fc\u30bf\u3092\u52b9\u7387\u7684\u306b\u7ba1\u7406\u3057\u307e\u3059\u3002</p>"},{"location":"base-content/#_1","title":"\u30ea\u30b9\u30c8","text":"<pre><code># \u30ea\u30b9\u30c8\u306e\u4f5c\u6210\nfruits = [\"apple\", \"banana\", \"cherry\"]\n\n# \u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\nprint(fruits[0])  # \"apple\"\n\n# \u30ea\u30b9\u30c8\u306e\u64cd\u4f5c\nfruits.append(\"orange\")  # \u8ffd\u52a0\nfruits.insert(1, \"blueberry\")  # \u633f\u5165\nfruits.remove(\"banana\")  # \u524a\u9664\npopped = fruits.pop()  # \u6700\u5f8c\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\nprint(popped)  # \"orange\"\n\n# \u30ea\u30b9\u30c8\u306e\u30b9\u30e9\u30a4\u30b9\nnumbers = [0, 1, 2, 3, 4, 5]\nprint(numbers[1:4])  # [1, 2, 3]\nprint(numbers[:3])   # [0, 1, 2]\nprint(numbers[3:])   # [3, 4, 5]\nprint(numbers[::2])  # [0, 2, 4] - 2\u30b9\u30c6\u30c3\u30d7\u3054\u3068\n\n# \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\nsquares = [x**2 for x in range(10)]\nprint(squares)  # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n\neven_squares = [x**2 for x in range(10) if x % 2 == 0]\nprint(even_squares)  # [0, 4, 16, 36, 64]\n</code></pre>"},{"location":"base-content/#_2","title":"\u30bf\u30d7\u30eb\uff08\u4e0d\u5909\u30ea\u30b9\u30c8\uff09","text":"<pre><code># \u30bf\u30d7\u30eb\u306e\u4f5c\u6210\ndimensions = (200, 50, 100)\n\n# \u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\nprint(dimensions[0])  # 200\n\n# \u30bf\u30d7\u30eb\u306f\u5909\u66f4\u4e0d\u53ef\n# dimensions[0] = 250  # \u30a8\u30e9\u30fc\n</code></pre>"},{"location":"base-content/#_3","title":"\u8f9e\u66f8","text":"<pre><code># \u8f9e\u66f8\u306e\u4f5c\u6210\nperson = {\"name\": \"Alice\", \"age\": 25, \"city\": \"Tokyo\"}\n\n# \u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\nprint(person[\"name\"])  # \"Alice\"\n\n# \u8f9e\u66f8\u306e\u64cd\u4f5c\nperson[\"email\"] = \"alice@example.com\"  # \u8ffd\u52a0\nperson[\"age\"] = 26  # \u66f4\u65b0\ndel person[\"city\"]  # \u524a\u9664\n\n# \u30ad\u30fc\u306e\u5b58\u5728\u78ba\u8a8d\nif \"name\" in person:\n    print(\"Name exists!\")\n\n# get \u30e1\u30bd\u30c3\u30c9\uff08\u30ad\u30fc\u304c\u306a\u3044\u5834\u5408\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6307\u5b9a\uff09\nphone = person.get(\"phone\", \"\u672a\u767b\u9332\")\nprint(phone)  # \"\u672a\u767b\u9332\"\n\n# \u8f9e\u66f8\u5185\u5305\u8868\u8a18\nsquares_dict = {x: x**2 for x in range(5)}\nprint(squares_dict)  # {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}\n</code></pre>"},{"location":"base-content/#_4","title":"\u30bb\u30c3\u30c8\uff08\u91cd\u8907\u306a\u3057\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\uff09","text":"<pre><code># \u30bb\u30c3\u30c8\u306e\u4f5c\u6210\nfruits_set = {\"apple\", \"banana\", \"cherry\", \"apple\"}\nprint(fruits_set)  # \u91cd\u8907\u306f\u81ea\u52d5\u7684\u306b\u9664\u53bb\u3055\u308c\u308b\n\n# \u30bb\u30c3\u30c8\u306e\u64cd\u4f5c\nfruits_set.add(\"orange\")\nfruits_set.remove(\"banana\")\n\n# \u30bb\u30c3\u30c8\u306e\u6f14\u7b97\nset_a = {1, 2, 3, 4, 5}\nset_b = {4, 5, 6, 7, 8}\nprint(set_a.union(set_b))        # \u548c\u96c6\u5408: {1, 2, 3, 4, 5, 6, 7, 8}\nprint(set_a.intersection(set_b))  # \u7a4d\u96c6\u5408: {4, 5}\nprint(set_a.difference(set_b))   # \u5dee\u96c6\u5408: {1, 2, 3}\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u8f9e\u66f8\u578b\u3092\u4f7f\u3044\u3001\u81ea\u5206\u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3066\u3001\u5168\u3066\u306e\u9805\u76ee\u3092\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 * \u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u5185\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3001\u8f9e\u66f8\u3068\u3057\u3066\u8fd4\u3059\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070 \"hello world hello\" \u3068\u3044\u3046\u5165\u529b\u306b\u5bfe\u3057\u3066 {\"hello\": 2, \"world\": 1} \u3068\u3044\u3046\u8f9e\u66f8\u3092\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"base-content/#46","title":"4.6 \u30a8\u30e9\u30fc\u51e6\u7406","text":"<pre><code># \u57fa\u672c\u7684\u306a\u4f8b\u5916\u51e6\u7406\ntry:\n    number = int(input(\"\u6570\u5b57\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \"))\n    result = 10 / number\n    print(f\"\u7d50\u679c: {result}\")\nexcept ValueError:\n    print(\"\u6709\u52b9\u306a\u6570\u5b57\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\nexcept ZeroDivisionError:\n    print(\"0\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\")\nexcept Exception as e:\n    print(f\"\u4e88\u671f\u305b\u306c\u30a8\u30e9\u30fc: {e}\")\nelse:\n    print(\"\u30a8\u30e9\u30fc\u306a\u304f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\")\nfinally:\n    print(\"\u51e6\u7406\u3092\u7d42\u4e86\u3057\u307e\u3059\")\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u30e6\u30fc\u30b6\u30fc\u306b\uff12\u3064\u306e\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u3082\u3089\u3044\u3001\u5272\u308a\u7b97\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30bc\u30ed\u9664\u7b97\u3084\u6570\u5024\u4ee5\u5916\u306e\u5165\u529b\u306b\u5bfe\u3057\u3066\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"base-content/#47","title":"4.7 \u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c","text":"<pre><code># \u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\nwith open('sample.txt', 'w', encoding='utf-8') as file:\n    file.write('Python\u3067\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\\n')\n    file.write('2\u884c\u76ee\u306e\u30c6\u30ad\u30b9\u30c8\\n')\n\n# \u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\nwith open('sample.txt', 'r', encoding='utf-8') as file:\n    content = file.read()\n    print(content)\n\n# 1\u884c\u305a\u3064\u8aad\u307f\u8fbc\u307f\nwith open('sample.txt', 'r', encoding='utf-8') as file:\n    for line in file:\n        print(line.strip())  # \u672b\u5c3e\u306e\u6539\u884c\u3092\u9664\u53bb\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u30e6\u30fc\u30b6\u30fc\u304c\u5165\u529b\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u8ffd\u8a18\u3057\u3001\u305d\u306e\u5f8c\u30d5\u30a1\u30a4\u30eb\u306e\u5168\u5185\u5bb9\u3092\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"base-content/#5-flaskapi","title":"\u7b2c5\u7ae0: Flask\u306b\u3088\u308bAPI\u958b\u767a","text":""},{"location":"base-content/#51-flask","title":"5.1 Flask\u3068\u306f\uff1f","text":"<p>Flask\u306f\u3001Python\u306e\u8efd\u91cf\u306aWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\u300c\u30de\u30a4\u30af\u30ed\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u300d\u3068\u547c\u3070\u308c\u3001\u6700\u5c0f\u9650\u306e\u6a5f\u80fd\u3092\u5099\u3048\u306a\u304c\u3089\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u62e1\u5f35\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5c0f\u898f\u6a21\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084API\u958b\u767a\u3001\u30d7\u30ed\u30c8\u30bf\u30a4\u30d4\u30f3\u30b0\u306b\u6700\u9069\u3067\u3059\u3002</p>"},{"location":"base-content/#52-flask","title":"5.2 \u306a\u305cFlask\u3092\u4f7f\u3046\u306e\u304b\uff1f","text":"<ul> <li>\u30b7\u30f3\u30d7\u30eb\u3067\u7fd2\u5f97\u304c\u5bb9\u6613: \u5c11\u306a\u3044\u30b3\u30fc\u30c9\u3067\u52d5\u304fWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u53ef\u80fd</li> <li>\u67d4\u8edf\u6027: \u6700\u5c0f\u9650\u306e\u30b3\u30a2\u6a5f\u80fd\u306b\u3001\u5fc5\u8981\u306a\u6a5f\u80fd\u3060\u3051\u3092\u8ffd\u52a0\u53ef\u80fd</li> <li>\u62e1\u5f35\u6027: \u591a\u304f\u306eFlask\u62e1\u5f35\u6a5f\u80fd\u304c\u5229\u7528\u53ef\u80fd</li> <li>Python\u306e\u5f37\u307f: \u30c7\u30fc\u30bf\u51e6\u7406\u3084AI\u306a\u3069Python\u306e\u5f37\u307f\u3068\u306e\u9023\u643a\u304c\u5bb9\u6613</li> </ul>"},{"location":"base-content/#53-flaskapi","title":"5.3 Flask\u57fa\u672cAPI\u306e\u4f5c\u6210\uff08\u30cf\u30f3\u30ba\u30aa\u30f3\uff09","text":""},{"location":"base-content/#_5","title":"\u74b0\u5883\u6e96\u5099:","text":"<pre><code># Flask\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip install flask\n\n# \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\nmkdir flask-api\ncd flask-api\n</code></pre>"},{"location":"base-content/#flask","title":"\u6700\u5c0f\u9650\u306eFlask\u30a2\u30d7\u30ea:","text":"<pre><code># app.py\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return 'Hello, Flask!'\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"base-content/#jsonapi","title":"JSON\u3092\u8fd4\u3059API\u306e\u4f8b:","text":"<pre><code># app.py\nfrom flask import Flask, jsonify\n\napp = Flask(__name__)\n\n@app.route('/hello', methods=['GET'])\ndef hello_world():\n    return jsonify({'message': 'Hello, World!'})\n\n@app.route('/users/&lt;username&gt;', methods=['GET'])\ndef get_user(username):\n    # \u5b9f\u969b\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u53d6\u5f97\u3059\u308b\u30b1\u30fc\u30b9\u304c\u591a\u3044\n    return jsonify({\n        'username': username,\n        'email': f'{username}@example.com'\n    })\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"base-content/#54","title":"5.4 \u30ea\u30af\u30a8\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u51e6\u7406","text":"<pre><code># app.py\nfrom flask import Flask, jsonify, request\n\napp = Flask(__name__)\n\n@app.route('/echo', methods=['POST'])\ndef echo():\n    # JSON\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u3092\u53d6\u5f97\n    data = request.json\n    return jsonify(data)\n\n@app.route('/search', methods=['GET'])\ndef search():\n    # \u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\n    query = request.args.get('q', '')\n    return jsonify({\n        'query': query,\n        'results': [f'Result for {query} - 1', f'Result for {query} - 2']\n    })\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"base-content/#55-api","title":"5.5 API\u306e\u5b9f\u884c\u3068\u30c6\u30b9\u30c8","text":"<p>Flask\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002</p> <pre><code>python app.py\n</code></pre> <p>\u30d6\u30e9\u30a6\u30b6\u307e\u305f\u306fAPI\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08curl, Postman, HTTPie\u306a\u3069\uff09\u3067\u4ee5\u4e0b\u306eURL\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <ul> <li><code>http://127.0.0.1:5000/hello</code> - Hello World JSON\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d6\u5f97</li> <li><code>http://127.0.0.1:5000/users/alice</code> - \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97</li> <li><code>http://127.0.0.1:5000/search?q=python</code> - \u691c\u7d22\u30af\u30a8\u30ea\u3092\u9001\u4fe1</li> </ul> <p>POST\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u9001\u4fe1\u4f8b\uff08curl\u4f7f\u7528\uff09:</p> <pre><code>curl -X POST -H \"Content-Type: application/json\" -d '{\"name\":\"John\",\"age\":30}' http://127.0.0.1:5000/echo\n</code></pre>"},{"location":"base-content/#56-sqlite","title":"5.6 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u9023\u643a\uff08SQLite\uff09","text":"<pre><code># app.py\nimport sqlite3\nfrom flask import Flask, jsonify, request, g\n\napp = Flask(__name__)\n\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3092\u53d6\u5f97\ndef get_db():\n    db = getattr(g, '_database', None)\n    if db is None:\n        db = g._database = sqlite3.connect('tasks.db')\n        db.row_factory = sqlite3.Row\n    return db\n\n# \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7d42\u4e86\u6642\u306bDB\u3092\u30af\u30ed\u30fc\u30ba\n@app.teardown_appcontext\ndef close_connection(exception):\n    db = getattr(g, '_database', None)\n    if db is not None:\n        db.close()\n\n# \u521d\u671f\u5316\ndef init_db():\n    with app.app_context():\n        db = get_db()\n        with app.open_resource('schema.sql', mode='r') as f:\n            db.cursor().executescript(f.read())\n        db.commit()\n\n# \u30bf\u30b9\u30af\u30ea\u30b9\u30c8\u53d6\u5f97API\n@app.route('/tasks', methods=['GET'])\ndef get_tasks():\n    db = get_db()\n    cursor = db.execute('SELECT id, title, done FROM tasks')\n    tasks = [dict(id=row['id'], title=row['title'], done=row['done']) for row in cursor.fetchall()]\n    return jsonify(tasks)\n\n# \u30bf\u30b9\u30af\u8ffd\u52a0API\n@app.route('/tasks', methods=['POST'])\ndef add_task():\n    if not request.json or not 'title' in request.json:\n        return jsonify({'error': 'Title is required'}), 400\n\n    title = request.json['title']\n    db = get_db()\n    cursor = db.execute('INSERT INTO tasks (title, done) VALUES (?, ?)', \n                        [title, False])\n    db.commit()\n\n    return jsonify({\n        'id': cursor.lastrowid,\n        'title': title,\n        'done': False\n    }), 201\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> <p>schema.sql\u30d5\u30a1\u30a4\u30eb:</p> <pre><code>DROP TABLE IF EXISTS tasks;\nCREATE TABLE tasks (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  title TEXT NOT NULL,\n  done BOOLEAN NOT NULL DEFAULT FALSE\n);\n</code></pre>"},{"location":"base-content/#57","title":"5.7 \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0","text":"<pre><code>from flask import Flask, jsonify\n\napp = Flask(__name__)\n\n# \u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n@app.errorhandler(404)\ndef not_found(error):\n    return jsonify({'error': 'Not found'}), 404\n\n@app.errorhandler(400)\ndef bad_request(error):\n    return jsonify({'error': 'Bad request'}), 400\n\n@app.errorhandler(500)\ndef server_error(error):\n    return jsonify({'error': 'Internal server error'}), 500\n\n@app.route('/divide', methods=['GET'])\ndef divide():\n    try:\n        a = int(request.args.get('a', 0))\n        b = int(request.args.get('b', 0))\n        if b == 0:\n            return jsonify({'error': 'Division by zero'}), 400\n        return jsonify({'result': a / b})\n    except ValueError:\n        return jsonify({'error': 'Invalid parameters'}), 400\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * <code>/about</code>\u3068\u3044\u3046\u65b0\u3057\u3044\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u81ea\u5206\u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u3092JSON\u5f62\u5f0f\u3067\u8fd4\u3059API\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 * \u56db\u5247\u6f14\u7b97\uff08\u8db3\u3057\u7b97\u3001\u5f15\u304d\u7b97\u3001\u639b\u3051\u7b97\u3001\u5272\u308a\u7b97\uff09\u3092\u884c\u3046API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8<code>/calc</code>\u3092\u4f5c\u6210\u3057\u3001\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u6f14\u7b97\u5b50\u3068\u6570\u5024\u3092\u53d7\u3051\u53d6\u3063\u3066\u7d50\u679c\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"base-content/#6","title":"\u7b2c6\u7ae0: \u307e\u3068\u3081\u3068\u767a\u5c55","text":""},{"location":"base-content/#61","title":"6.1 \u5b66\u7fd2\u306e\u307e\u3068\u3081","text":"<p>\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306f\u3001\u4ee5\u4e0b\u3092\u5b66\u3073\u307e\u3057\u305f\uff1a</p> <ol> <li>Python\u306e\u57fa\u672c\u3068\u74b0\u5883\u69cb\u7bc9</li> <li>\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u578b\u3068\u305d\u306e\u64cd\u4f5c</li> <li>\u6761\u4ef6\u5206\u5c90\u3001\u30eb\u30fc\u30d7\u3001\u95a2\u6570\u306a\u3069\u306e\u5236\u5fa1\u69cb\u9020</li> <li>\u30ea\u30b9\u30c8\u3001\u8f9e\u66f8\u306a\u3069\u306e\u30c7\u30fc\u30bf\u69cb\u9020</li> <li>Flask\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u57fa\u790e</li> <li>Web API\u306e\u4f5c\u6210\u65b9\u6cd5</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u9023\u643a\u306e\u57fa\u672c</li> </ol>"},{"location":"base-content/#62","title":"6.2 \u6b21\u306e\u30b9\u30c6\u30c3\u30d7","text":"<p>\u4eca\u5f8c\u306e\u30b9\u30ad\u30eb\u30a2\u30c3\u30d7\u306e\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u5b66\u7fd2\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\uff1a</p> <ul> <li>Python\u4e2d\u7d1a\u30fb\u4e0a\u7d1a\u30c8\u30d4\u30c3\u30af:</li> <li>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\uff08\u30af\u30e9\u30b9\u3001\u7d99\u627f\u7b49\uff09</li> <li>\u30c7\u30fc\u30bf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\uff08pandas, numpy\uff09</li> <li>\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\uff08pytest\uff09</li> <li> <p>\u975e\u540c\u671f\u51e6\u7406</p> </li> <li> <p>Flask\u306e\u767a\u5c55:</p> </li> <li>Blueprint\uff08\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\uff09</li> <li>SQLAlchemy\u3067\u306eORM\u64cd\u4f5c</li> <li>Flask-RESTful\u62e1\u5f35</li> <li> <p>\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u5b9f\u88c5</p> </li> <li> <p>Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a:</p> </li> <li>\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u9023\u643a\uff08JavaScript, React\u7b49\uff09</li> <li>\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\uff08Docker\u3001\u30af\u30e9\u30a6\u30c9\u74b0\u5883\uff09</li> <li>CI/CD</li> </ul>"},{"location":"base-content/#63","title":"6.3 \u304a\u3059\u3059\u3081\u306e\u53c2\u8003\u8cc7\u6599","text":"<ul> <li>\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1aPython\u516c\u5f0f\u3001Flask\u516c\u5f0f</li> <li>\u30aa\u30f3\u30e9\u30a4\u30f3\u30b3\u30fc\u30b9\uff1aUdemy, Coursera, PluralSight\u306a\u3069</li> <li>\u66f8\u7c4d\uff1a\u300ePython\u30af\u30e9\u30c3\u30b7\u30e5\u30b3\u30fc\u30b9\u300f\u300eFlask Web\u958b\u767a\u300f\u306a\u3069</li> </ul>"},{"location":"base-content/#7","title":"\u7b2c7\u7ae0: \u8ffd\u52a0\u8ab2\u984c\uff08\u6311\u6226\uff09","text":""},{"location":"base-content/#71-api","title":"7.1 \u5b9f\u8df5\u7684\u306aAPI\u30b5\u30fc\u30d0\u30fc\u69cb\u7bc9","text":"<p>\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u6301\u3064API\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <ol> <li>\u56db\u5247\u6f14\u7b97API\u306e\u4f5c\u6210:</li> <li><code>/calc</code>\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u3001\u56db\u5247\u6f14\u7b97\uff08\u8db3\u3057\u7b97\u3001\u5f15\u304d\u7b97\u3001\u639b\u3051\u7b97\u3001\u5272\u308a\u7b97\uff09\u3092\u884c\u3046API\u3092\u4f5c\u6210</li> <li>\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u307e\u305f\u306fJSON\u30ea\u30af\u30a8\u30b9\u30c8\u30672\u3064\u306e\u6570\u5024\u3068\u6f14\u7b97\u5b50\u3092\u53d7\u3051\u53d6\u308b</li> <li>\u7d50\u679c\u3092JSON\u5f62\u5f0f\u3067\u8fd4\u3059</li> <li> <p>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\uff08\u6570\u5024\u4ee5\u5916\u306e\u5165\u529b\u3001\u30bc\u30ed\u9664\u7b97\u306a\u3069\uff09\u3092\u5b9f\u88c5</p> </li> <li> <p>\u30bf\u30b9\u30af\u7ba1\u7406API:</p> </li> <li>\u30bf\u30b9\u30af\u306e\u4f5c\u6210\u3001\u53d6\u5f97\u3001\u66f4\u65b0\u3001\u524a\u9664\u304c\u3067\u304d\u308bRESTful API</li> <li>\u30c7\u30fc\u30bf\u306fSQLite\u306b\u4fdd\u5b58</li> <li> <p>\u4ee5\u4e0b\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5b9f\u88c5</p> <ul> <li><code>GET /tasks</code>: \u30bf\u30b9\u30af\u4e00\u89a7\u53d6\u5f97</li> <li><code>GET /tasks/&lt;id&gt;</code>: \u6307\u5b9aID\u306e\u30bf\u30b9\u30af\u53d6\u5f97</li> <li><code>POST /tasks</code>: \u65b0\u898f\u30bf\u30b9\u30af\u4f5c\u6210</li> <li><code>PUT /tasks/&lt;id&gt;</code>: \u30bf\u30b9\u30af\u66f4\u65b0</li> <li><code>DELETE /tasks/&lt;id&gt;</code>: \u30bf\u30b9\u30af\u524a\u9664</li> </ul> </li> <li> <p>\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u6a5f\u80fd:</p> </li> <li>\u30b7\u30f3\u30d7\u30eb\u306aAPI\u30ad\u30fc\u8a8d\u8a3c\u306e\u5b9f\u88c5</li> <li>\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u62d2\u5426\u3059\u308b</li> <li>\u30e6\u30fc\u30b6\u30fc\u3054\u3068\u306b\u7570\u306a\u308b\u30bf\u30b9\u30af\u30ea\u30b9\u30c8\u3092\u8868\u793a</li> </ol>"},{"location":"base-content/#72","title":"7.2 \u767a\u5c55\u7684\u306a\u8ab2\u984c","text":"<ul> <li>RESTful API\u8a2d\u8a08\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306b\u5f93\u3063\u3066API\u3092\u518d\u8a2d\u8a08</li> <li>\u30b9\u30ad\u30fc\u30de\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\uff08marshmallow\u7b49\uff09</li> <li>API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u81ea\u52d5\u751f\u6210\uff08Swagger/OpenAPI\uff09</li> <li>\u30c6\u30b9\u30c8\u81ea\u52d5\u5316\uff08pytest\uff09\u306e\u5b9f\u88c5</li> <li>Docker\u30b3\u30f3\u30c6\u30ca\u5316\u3068\u30c7\u30d7\u30ed\u30a4</li> </ul>"},{"location":"base-content/#_6","title":"\u4ed8\u9332","text":""},{"location":"base-content/#a","title":"A. \u4fbf\u5229\u306a\u30c4\u30fc\u30eb\u3068\u30e9\u30a4\u30d6\u30e9\u30ea","text":"<ul> <li>\u958b\u767a\u74b0\u5883: PyCharm, VS Code</li> <li>\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406: pip, pipenv, poetry</li> <li>\u30c6\u30b9\u30c8: pytest, unittest</li> <li>Web\u958b\u767a: Flask, Django</li> <li>\u30c7\u30fc\u30bf\u51e6\u7406: pandas, numpy</li> <li>\u53ef\u8996\u5316: matplotlib, seaborn</li> <li>API\u958b\u767a: Flask-RESTful, FastAPI</li> </ul>"},{"location":"base-content/#b","title":"B. \u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc\u3068\u30c7\u30d0\u30c3\u30b0\u65b9\u6cd5","text":"<ul> <li>\u30a4\u30f3\u30c7\u30f3\u30c8\u30a8\u30e9\u30fc</li> <li>\u540d\u524d\u30a8\u30e9\u30fc\uff08\u672a\u5b9a\u7fa9\u5909\u6570\uff09</li> <li>\u578b\u30a8\u30e9\u30fc</li> <li>\u30a4\u30f3\u30dd\u30fc\u30c8\u30a8\u30e9\u30fc</li> <li>pdb\u3092\u4f7f\u3063\u305f\u30c7\u30d0\u30c3\u30b0\u65b9\u6cd5</li> <li>\u30ed\u30ae\u30f3\u30b0\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9</li> </ul>"},{"location":"base-content/#c-python","title":"C. Python\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04","text":"<ul> <li>PEP 8: Python\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9</li> <li>\u30b3\u30e1\u30f3\u30c8\u3068\u6587\u66f8\u5316</li> <li>\u547d\u540d\u898f\u5247</li> <li>\u30b3\u30fc\u30c9\u30ec\u30a4\u30a2\u30a6\u30c8</li> <li>\u30ea\u30f3\u30c8\uff08linting\uff09\u30c4\u30fc\u30eb</li> </ul>"},{"location":"challenge/","title":"\u8ffd\u52a0\u8ab2\u984c\uff08\u6311\u6226\uff09","text":""},{"location":"challenge/#api","title":"\u5b9f\u8df5\u7684\u306aAPI\u30b5\u30fc\u30d0\u30fc\u69cb\u7bc9","text":"<p>\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u6301\u3064API\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <ol> <li>\u56db\u5247\u6f14\u7b97API\u306e\u4f5c\u6210:</li> <li><code>/calc</code>\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u3001\u56db\u5247\u6f14\u7b97\uff08\u8db3\u3057\u7b97\u3001\u5f15\u304d\u7b97\u3001\u639b\u3051\u7b97\u3001\u5272\u308a\u7b97\uff09\u3092\u884c\u3046API\u3092\u4f5c\u6210</li> <li>\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u307e\u305f\u306fJSON\u30ea\u30af\u30a8\u30b9\u30c8\u30672\u3064\u306e\u6570\u5024\u3068\u6f14\u7b97\u5b50\u3092\u53d7\u3051\u53d6\u308b</li> <li>\u7d50\u679c\u3092JSON\u5f62\u5f0f\u3067\u8fd4\u3059</li> <li> <p>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\uff08\u6570\u5024\u4ee5\u5916\u306e\u5165\u529b\u3001\u30bc\u30ed\u9664\u7b97\u306a\u3069\uff09\u3092\u5b9f\u88c5</p> </li> <li> <p>\u30bf\u30b9\u30af\u7ba1\u7406API:</p> </li> <li>\u30bf\u30b9\u30af\u306e\u4f5c\u6210\u3001\u53d6\u5f97\u3001\u66f4\u65b0\u3001\u524a\u9664\u304c\u3067\u304d\u308bRESTful API</li> <li>\u30c7\u30fc\u30bf\u306fSQLite\u307e\u305f\u306fSQLAlchemy\u3067\u4fdd\u5b58</li> <li> <p>\u4ee5\u4e0b\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5b9f\u88c5</p> <ul> <li><code>GET /tasks</code>: \u30bf\u30b9\u30af\u4e00\u89a7\u53d6\u5f97</li> <li><code>GET /tasks/&lt;id&gt;</code>: \u6307\u5b9aID\u306e\u30bf\u30b9\u30af\u53d6\u5f97</li> <li><code>POST /tasks</code>: \u65b0\u898f\u30bf\u30b9\u30af\u4f5c\u6210</li> <li><code>PUT /tasks/&lt;id&gt;</code>: \u30bf\u30b9\u30af\u66f4\u65b0</li> <li><code>DELETE /tasks/&lt;id&gt;</code>: \u30bf\u30b9\u30af\u524a\u9664</li> </ul> </li> <li> <p>\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u6a5f\u80fd:</p> </li> <li>\u30b7\u30f3\u30d7\u30eb\u306aAPI\u30ad\u30fc\u8a8d\u8a3c\u306e\u5b9f\u88c5</li> <li>\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u62d2\u5426\u3059\u308b</li> <li>\u30e6\u30fc\u30b6\u30fc\u3054\u3068\u306b\u7570\u306a\u308b\u30bf\u30b9\u30af\u30ea\u30b9\u30c8\u3092\u8868\u793a</li> </ol>"},{"location":"challenge/#_2","title":"\u767a\u5c55\u7684\u306a\u8ab2\u984c","text":"<ul> <li>RESTful API\u8a2d\u8a08\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306b\u5f93\u3063\u3066API\u3092\u518d\u8a2d\u8a08</li> <li>\u30b9\u30ad\u30fc\u30de\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\uff08marshmallow\u7b49\uff09</li> <li>API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u81ea\u52d5\u751f\u6210\uff08Swagger/OpenAPI, flasgger, apispec\u7b49\uff09</li> <li>\u30c6\u30b9\u30c8\u81ea\u52d5\u5316\uff08pytest, unittest, coverage\uff09</li> <li>Docker\u30b3\u30f3\u30c6\u30ca\u5316\u3068\u30c7\u30d7\u30ed\u30a4\uff08Dockerfile, docker-compose\uff09</li> <li>CI/CD\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u69cb\u7bc9\uff08GitHub Actions\u7b49\uff09</li> </ul> <p>\u300c\u73fe\u5834\u3067\u672c\u5f53\u306b\u4f7f\u3048\u308bAPI\u300d\u3092\u76ee\u6307\u3057\u3066\u3001\u305c\u3072\u6311\u6226\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff01 </p>"},{"location":"flask_api/","title":"Flask API\u958b\u767a","text":""},{"location":"flask_api/#api","title":"API\u8a2d\u8a08\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<ul> <li>\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306f\u300c\u540d\u8a5e\u300d\u3067\u8a2d\u8a08\uff08\u4f8b\uff1a/users, /tasks\uff09</li> <li>HTTP\u30e1\u30bd\u30c3\u30c9\uff08GET/POST/PUT/DELETE\uff09\u3092\u6b63\u3057\u304f\u4f7f\u3046</li> <li>\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u30fb\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u660e\u78ba\u306b\u8fd4\u3059</li> <li>\u5165\u529b\u5024\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u5fc5\u305a\u884c\u3046</li> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08OpenAPI/Swagger\u7b49\uff09\u3092\u7528\u610f</li> </ul>"},{"location":"flask_api/#api_1","title":"\u30b5\u30f3\u30d7\u30eb\uff1a\u30e6\u30fc\u30b6\u30fc\u7ba1\u7406API\u8a2d\u8a08\u4f8b","text":"\u30e1\u30bd\u30c3\u30c9 \u30d1\u30b9 \u5185\u5bb9 GET /users \u30e6\u30fc\u30b6\u30fc\u4e00\u89a7\u53d6\u5f97 POST /users \u30e6\u30fc\u30b6\u30fc\u65b0\u898f\u4f5c\u6210 GET /users/ \u30e6\u30fc\u30b6\u30fc\u8a73\u7d30\u53d6\u5f97 PUT /users/ \u30e6\u30fc\u30b6\u30fc\u66f4\u65b0 DELETE /users/ \u30e6\u30fc\u30b6\u30fc\u524a\u9664"},{"location":"flask_api/#flaskapi","title":"Flask\u3067\u306eAPI\u5b9f\u88c5\u4f8b","text":"<pre><code>from flask import Flask, jsonify, request, abort\napp = Flask(__name__)\n\nusers = [\n    {\"id\": 1, \"name\": \"Alice\"},\n    {\"id\": 2, \"name\": \"Bob\"}\n]\n\n@app.route('/users', methods=['GET'])\ndef get_users():\n    return jsonify(users)\n\n@app.route('/users/&lt;int:user_id&gt;', methods=['GET'])\ndef get_user(user_id):\n    user = next((u for u in users if u[\"id\"] == user_id), None)\n    if user is None:\n        abort(404, description=\"User not found\")\n    return jsonify(user)\n\n@app.route('/users', methods=['POST'])\ndef create_user():\n    if not request.json or not \"name\" in request.json:\n        abort(400, description=\"Name is required\")\n    new_id = max(u[\"id\"] for u in users) + 1\n    user = {\"id\": new_id, \"name\": request.json[\"name\"]}\n    users.append(user)\n    return jsonify(user), 201\n\n# PUT/DELETE\u3082\u540c\u69d8\u306b\u5b9f\u88c5\u53ef\u80fd\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> <p>API\u306f\u300c\u8ab0\u304c\u4f7f\u3063\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u3044\u8a2d\u8a08\u300d\u3092\u5fc3\u304c\u3051\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"flask_api/#flaskapi_1","title":"Flask\u57fa\u672cAPI\u306e\u4f5c\u6210\uff08\u30cf\u30f3\u30ba\u30aa\u30f3\uff09","text":""},{"location":"flask_api/#_1","title":"\u74b0\u5883\u6e96\u5099:","text":"<pre><code># Flask\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip install flask\n\n# \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\nmkdir flask-api\ncd flask-api\n</code></pre>"},{"location":"flask_api/#flask","title":"\u6700\u5c0f\u9650\u306eFlask\u30a2\u30d7\u30ea:","text":"<pre><code># app.py\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return 'Hello, Flask!'\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"flask_api/#jsonapi","title":"JSON\u3092\u8fd4\u3059API\u306e\u4f8b:","text":"<pre><code># app.py\nfrom flask import Flask, jsonify\n\napp = Flask(__name__)\n\n@app.route('/hello', methods=['GET'])\ndef hello_world():\n    return jsonify({'message': 'Hello, World!'})\n\n@app.route('/users/&lt;username&gt;', methods=['GET'])\ndef get_user(username):\n    # \u5b9f\u969b\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u53d6\u5f97\u3059\u308b\u30b1\u30fc\u30b9\u304c\u591a\u3044\n    return jsonify({\n        'username': username,\n        'email': f'{username}@example.com'\n    })\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"flask_api/#_2","title":"\u30ea\u30af\u30a8\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u51e6\u7406","text":"<pre><code># app.py\nfrom flask import Flask, jsonify, request\n\napp = Flask(__name__)\n\n@app.route('/echo', methods=['POST'])\ndef echo():\n    # JSON\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u3092\u53d6\u5f97\n    data = request.json\n    return jsonify(data)\n\n@app.route('/search', methods=['GET'])\ndef search():\n    # \u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\n    query = request.args.get('q', '')\n    return jsonify({\n        'query': query,\n        'results': [f'Result for {query} - 1', f'Result for {query} - 2']\n    })\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"flask_api/#api_2","title":"API\u306e\u5b9f\u884c\u3068\u30c6\u30b9\u30c8","text":"<p>Flask\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002</p> <pre><code>python app.py\n</code></pre> <p>\u30d6\u30e9\u30a6\u30b6\u307e\u305f\u306fAPI\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08curl, Postman, HTTPie\u306a\u3069\uff09\u3067\u4ee5\u4e0b\u306eURL\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <ul> <li><code>http://127.0.0.1:5000/hello</code> - Hello World JSON\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d6\u5f97</li> <li><code>http://127.0.0.1:5000/users/alice</code> - \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97</li> <li><code>http://127.0.0.1:5000/search?q=python</code> - \u691c\u7d22\u30af\u30a8\u30ea\u3092\u9001\u4fe1</li> </ul> <p>POST\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u9001\u4fe1\u4f8b\uff08curl\u4f7f\u7528\uff09:</p> <pre><code>curl -X POST -H \"Content-Type: application/json\" -d '{\"name\":\"John\",\"age\":30}' http://127.0.0.1:5000/echo\n</code></pre>"},{"location":"flask_db/","title":"DB\u9023\u643a\uff08SQLite &amp; SQLAlchemy\uff09","text":""},{"location":"flask_db/#sqlite","title":"SQLite\uff08\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\u3067\u306e\u9023\u643a\u4f8b","text":"<pre><code>import sqlite3\nconn = sqlite3.connect('sample.db')\ncursor = conn.cursor()\ncursor.execute('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, name TEXT)')\ncursor.execute('INSERT INTO users (name) VALUES (?)', (\"\u5c71\u7530\",))\nconn.commit()\nfor row in cursor.execute('SELECT * FROM users'):\n    print(row)\nconn.close()\n</code></pre>"},{"location":"flask_db/#ormsqlalchemy","title":"ORM\uff08SQLAlchemy\uff09\u3067\u306e\u9023\u643a\u4f8b","text":"<p>SQLAlchemy\u306f\u300cPython\u306e\u30b3\u30fc\u30c9\u3060\u3051\u3067DB\u64cd\u4f5c\u304c\u3067\u304d\u308b\u300d\u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002</p> <pre><code>from flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\n\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///sample.db'\ndb = SQLAlchemy(app)\n\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String(50))\n\nwith app.app_context():\n    db.create_all()\n    user = User(name=\"\u4f50\u85e4\")\n    db.session.add(user)\n    db.session.commit()\n    users = User.query.all()\n    for u in users:\n        print(u.id, u.name)\n</code></pre> <p>ORM\u3092\u4f7f\u3046\u3068\u300cSQL\u6587\u3092\u66f8\u304b\u305a\u306b\u300dDB\u64cd\u4f5c\u304c\u3067\u304d\u3001\u4fdd\u5b88\u6027\u30fb\u5b89\u5168\u6027\u3082\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002</p> <pre><code># app.py\nimport sqlite3\nfrom flask import Flask, jsonify, request, g\n\napp = Flask(__name__)\n\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3092\u53d6\u5f97\ndef get_db():\n    db = getattr(g, '_database', None)\n    if db is None:\n        db = g._database = sqlite3.connect('tasks.db')\n        db.row_factory = sqlite3.Row\n    return db\n\n# \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7d42\u4e86\u6642\u306bDB\u3092\u30af\u30ed\u30fc\u30ba\n@app.teardown_appcontext\ndef close_connection(exception):\n    db = getattr(g, '_database', None)\n    if db is not None:\n        db.close()\n\n# \u521d\u671f\u5316\ndef init_db():\n    with app.app_context():\n        db = get_db()\n        with app.open_resource('schema.sql', mode='r') as f:\n            db.cursor().executescript(f.read())\n        db.commit()\n\n# \u30bf\u30b9\u30af\u30ea\u30b9\u30c8\u53d6\u5f97API\n@app.route('/tasks', methods=['GET'])\ndef get_tasks():\n    db = get_db()\n    cursor = db.execute('SELECT id, title, done FROM tasks')\n    tasks = [dict(id=row['id'], title=row['title'], done=row['done']) for row in cursor.fetchall()]\n    return jsonify(tasks)\n\n# \u30bf\u30b9\u30af\u8ffd\u52a0API\n@app.route('/tasks', methods=['POST'])\ndef add_task():\n    if not request.json or not 'title' in request.json:\n        return jsonify({'error': 'Title is required'}), 400\n\n    title = request.json['title']\n    db = get_db()\n    cursor = db.execute('INSERT INTO tasks (title, done) VALUES (?, ?)', \n                        [title, False])\n    db.commit()\n\n    return jsonify({\n        'id': cursor.lastrowid,\n        'title': title,\n        'done': False\n    }), 201\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> <p>schema.sql\u30d5\u30a1\u30a4\u30eb:</p> <pre><code>DROP TABLE IF EXISTS tasks;\nCREATE TABLE tasks (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  title TEXT NOT NULL,\n  done BOOLEAN NOT NULL DEFAULT FALSE\n);\n</code></pre>"},{"location":"flask_error/","title":"\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3068\u30c7\u30d0\u30c3\u30b0","text":""},{"location":"flask_error/#_2","title":"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc\u3068\u305d\u306e\u5bfe\u51e6\u6cd5","text":"<ul> <li>SyntaxError\uff08\u69cb\u6587\u30a8\u30e9\u30fc\uff09\uff1a\u30b9\u30da\u30eb\u3084\u30ab\u30c3\u30b3\u306e\u9589\u3058\u5fd8\u308c\u3092\u78ba\u8a8d</li> <li>IndentationError\uff08\u30a4\u30f3\u30c7\u30f3\u30c8\u30a8\u30e9\u30fc\uff09\uff1a\u30b9\u30da\u30fc\u30b9\u3068\u30bf\u30d6\u306e\u6df7\u5728\u306b\u6ce8\u610f</li> <li>TypeError/ValueError\uff1a\u578b\u3084\u5024\u306e\u30df\u30b9\u3002\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3088\u304f\u8aad\u3080</li> </ul>"},{"location":"flask_error/#flask","title":"Flask\u3067\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u4f8b","text":"<pre><code>from flask import Flask, jsonify, request\napp = Flask(__name__)\n\n@app.errorhandler(404)\ndef not_found(error):\n    return jsonify({'error': 'Not found'}), 404\n\n@app.errorhandler(400)\ndef bad_request(error):\n    return jsonify({'error': 'Bad request'}), 400\n\n@app.route('/divide')\ndef divide():\n    try:\n        a = int(request.args.get('a', 0))\n        b = int(request.args.get('b', 0))\n        if b == 0:\n            return jsonify({'error': 'Division by zero'}), 400\n        return jsonify({'result': a / b})\n    except Exception as e:\n        return jsonify({'error': str(e)}), 400\n</code></pre>"},{"location":"flask_error/#_3","title":"\u30c7\u30d0\u30c3\u30b0\u306e\u30b3\u30c4","text":"<ul> <li>\u30a8\u30e9\u30fc\u6587\u3092\u3088\u304f\u8aad\u3080\uff08\u3069\u306e\u884c\u3067\u4f55\u304c\u8d77\u304d\u305f\u304b\uff09</li> <li>print()\u3067\u5024\u3092\u78ba\u8a8d</li> <li>Flask\u306e<code>debug=True</code>\u3067\u8a73\u7d30\u306a\u30a8\u30e9\u30fc\u753b\u9762</li> <li>\u30ed\u30b0\u51fa\u529b\uff08logging\u30e2\u30b8\u30e5\u30fc\u30eb\uff09\u3082\u6d3b\u7528</li> </ul> <pre><code>import logging\nlogging.basicConfig(level=logging.INFO)\nlogging.info(\"\u3053\u3053\u307e\u3067\u5b9f\u884c\u3067\u304d\u305f\uff01\")\n</code></pre> <p>\u30a8\u30e9\u30fc\u306f\u300c\u6210\u9577\u306e\u30c1\u30e3\u30f3\u30b9\u300d\uff01\u7126\u3089\u305a\u4e00\u3064\u305a\u3064\u89e3\u6c7a\u3057\u307e\u3057\u3087\u3046\u3002 </p>"},{"location":"flask_intro/","title":"Flask\u5165\u9580","text":""},{"location":"flask_intro/#flask_1","title":"Flask\u3068\u306f\uff1f","text":"<p>Flask\u306f\u300c\u30b7\u30f3\u30d7\u30eb\u3067\u62e1\u5f35\u6027\u304c\u9ad8\u3044\u300dPython\u88fd\u306eWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002</p> <ul> <li>\u5fc5\u8981\u6700\u5c0f\u9650\u306e\u6a5f\u80fd\u3060\u3051\u3092\u6301\u3061\u3001\u81ea\u7531\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b</li> <li>\u5c0f\u898f\u6a21\u306aAPI\u304b\u3089\u672c\u683c\u7684\u306aWeb\u30b5\u30fc\u30d3\u30b9\u307e\u3067\u5e45\u5e83\u304f\u5bfe\u5fdc</li> </ul>"},{"location":"flask_intro/#flaskdjango","title":"Flask\u3068Django\u306e\u9055\u3044","text":"\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af \u7279\u5fb4 \u5411\u3044\u3066\u3044\u308b\u7528\u9014 Flask \u8efd\u91cf\u30fb\u81ea\u7531\u5ea6\u9ad8\u3044 API\u3001\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3001\u5c0f\u898f\u6a21Web Django \u6a5f\u80fd\u8c4a\u5bcc\u30fb\u898f\u7d04\u91cd\u8996 \u5927\u898f\u6a21Web\u3001\u7ba1\u7406\u753b\u9762\u3001\u8a8d\u8a3c\u4ed8\u304d\u30b5\u30a4\u30c8 <ul> <li>Flask\u306f\u300c\u81ea\u5206\u3067\u7d44\u307f\u7acb\u3066\u305f\u3044\u4eba\u300d\u5411\u3051\u3001Django\u306f\u300c\u5168\u90e8\u5165\u308a\u3067\u697d\u3057\u305f\u3044\u4eba\u300d\u5411\u3051</li> </ul>"},{"location":"flask_intro/#flask_2","title":"Flask\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u4f8b","text":"<pre><code>myapp/\n\u251c\u2500\u2500 app.py\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 static/\n\u251c\u2500\u2500 templates/\n\u2514\u2500\u2500 ...\n</code></pre> <ul> <li><code>app.py</code>\uff1a\u30a2\u30d7\u30ea\u672c\u4f53</li> <li><code>static/</code>\uff1aCSS\u3084\u753b\u50cf\u306a\u3069\u9759\u7684\u30d5\u30a1\u30a4\u30eb</li> <li><code>templates/</code>\uff1aHTML\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8</li> </ul>"},{"location":"flask_intro/#flask_3","title":"\u5b9f\u52d9\u3067\u3088\u304f\u4f7f\u3046Flask\u62e1\u5f35","text":"<ul> <li>Flask-RESTful\uff1aAPI\u958b\u767a\u3092\u697d\u306b\u3059\u308b</li> <li>Flask-Login\uff1a\u30ed\u30b0\u30a4\u30f3\u8a8d\u8a3c\u3092\u7c21\u5358\u306b</li> <li>Flask-Migrate\uff1aDB\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u7ba1\u7406</li> <li>Flask-CORS\uff1a\u4ed6\u30c9\u30e1\u30a4\u30f3\u304b\u3089\u306eAPI\u30a2\u30af\u30bb\u30b9\u8a31\u53ef</li> </ul> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4f8b\uff1a</p> <pre><code>pip install flask-restful flask-login flask-migrate flask-cors\n</code></pre>"},{"location":"flask_intro/#_1","title":"\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30fb\u5b66\u7fd2\u30ea\u30bd\u30fc\u30b9","text":"<ul> <li>Flask\u516c\u5f0f</li> <li>Flask-RESTful\u516c\u5f0f</li> <li>Flask-Login\u516c\u5f0f</li> </ul> <p>Flask\u306f\u300c\u6700\u521d\u306f\u30b7\u30f3\u30d7\u30eb\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30d1\u30ef\u30d5\u30eb\u300d\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\uff01 </p>"},{"location":"python_basic/","title":"Python\u57fa\u672c\u6587\u6cd5","text":""},{"location":"python_basic/#1","title":"1. \u5909\u6570\u3068\u578b","text":""},{"location":"python_basic/#_1","title":"\u306a\u305c\u5b66\u3076\u306e\u304b\uff1f","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u300c\u30c7\u30fc\u30bf\u3092\u64cd\u4f5c\u3059\u308b\u300d\u3082\u306e\u3002\u30c7\u30fc\u30bf\u306e\u7a2e\u985e\uff08\u578b\uff09\u3084\u5909\u6570\u306e\u4f7f\u3044\u65b9\u3092\u77e5\u308b\u3053\u3068\u3067\u3001\u601d\u3044\u901a\u308a\u306b\u60c5\u5831\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"python_basic/#_2","title":"\u73fe\u5834\u3067\u306e\u4f7f\u3044\u6240","text":"<ul> <li>\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u3084\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u5909\u6570\u306b\u4fdd\u5b58</li> <li>\u8a08\u7b97\u3084\u30c7\u30fc\u30bf\u5909\u63db\u3001API\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u52a0\u5de5\u306a\u3069</li> </ul>"},{"location":"python_basic/#_3","title":"\u89e3\u8aac","text":"<p>Python\u306f\u300c\u52d5\u7684\u578b\u4ed8\u3051\u300d\u306a\u306e\u3067\u3001\u578b\u3092\u610f\u8b58\u3057\u3059\u304e\u305a\u76f4\u611f\u7684\u306b\u66f8\u3051\u307e\u3059\u3002</p> <pre><code>num = 10        # \u6574\u6570\npi = 3.14       # \u5c0f\u6570\nname = \"AI\"     # \u6587\u5b57\u5217\nis_ok = True    # \u771f\u507d\u5024\n</code></pre>"},{"location":"python_basic/#_4","title":"\u578b\u5909\u63db","text":"<pre><code>age = \"20\"\nage = int(age)  # \u6587\u5b57\u5217\u2192\u6574\u6570\n</code></pre>"},{"location":"python_basic/#2","title":"2. \u6761\u4ef6\u5206\u5c90","text":""},{"location":"python_basic/#_5","title":"\u306a\u305c\u5b66\u3076\u306e\u304b\uff1f","text":"<p>\u300c\u6761\u4ef6\u306b\u3088\u3063\u3066\u52d5\u304d\u3092\u5909\u3048\u308b\u300d\u3053\u3068\u306f\u3001\u3069\u3093\u306a\u696d\u52d9\u30b7\u30b9\u30c6\u30e0\u3067\u3082\u5fc5\u9808\u3067\u3059\u3002</p>"},{"location":"python_basic/#_6","title":"\u73fe\u5834\u3067\u306e\u4f7f\u3044\u6240","text":"<ul> <li>\u5165\u529b\u5024\u306e\u30c1\u30a7\u30c3\u30af</li> <li>\u6a29\u9650\u306b\u3088\u308b\u753b\u9762\u5207\u308a\u66ff\u3048</li> </ul>"},{"location":"python_basic/#_7","title":"\u89e3\u8aac","text":"<pre><code>score = 75\nif score &gt;= 80:\n    print(\"\u5408\u683c\")\nelse:\n    print(\"\u4e0d\u5408\u683c\")\n</code></pre>"},{"location":"python_basic/#3","title":"3. \u30eb\u30fc\u30d7\uff08\u7e70\u308a\u8fd4\u3057\uff09","text":""},{"location":"python_basic/#_8","title":"\u306a\u305c\u5b66\u3076\u306e\u304b\uff1f","text":"<p>\u300c\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u4e00\u62ec\u51e6\u7406\u300d\u3059\u308b\u306e\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5f37\u307f\u3067\u3059\u3002</p>"},{"location":"python_basic/#_9","title":"\u73fe\u5834\u3067\u306e\u4f7f\u3044\u6240","text":"<ul> <li>\u30d5\u30a1\u30a4\u30eb\u306e\u5168\u884c\u3092\u51e6\u7406</li> <li>API\u304b\u3089\u53d6\u5f97\u3057\u305f\u8907\u6570\u30c7\u30fc\u30bf\u306e\u4e00\u62ec\u5909\u63db</li> </ul>"},{"location":"python_basic/#_10","title":"\u89e3\u8aac","text":"<pre><code>for i in range(5):\n    print(i)\n</code></pre>"},{"location":"python_basic/#4","title":"4. \u95a2\u6570","text":""},{"location":"python_basic/#_11","title":"\u306a\u305c\u5b66\u3076\u306e\u304b\uff1f","text":"<p>\u300c\u540c\u3058\u51e6\u7406\u3092\u4f55\u5ea6\u3082\u66f8\u304b\u306a\u3044\u300d\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002</p>"},{"location":"python_basic/#_12","title":"\u73fe\u5834\u3067\u306e\u4f7f\u3044\u6240","text":"<ul> <li>\u30c7\u30fc\u30bf\u5909\u63db\u3084\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u5171\u901a\u5316</li> <li>\u8907\u96d1\u306a\u51e6\u7406\u306e\u5206\u5272</li> </ul>"},{"location":"python_basic/#_13","title":"\u89e3\u8aac","text":"<pre><code>def greet(name):\n    return f\"\u3053\u3093\u306b\u3061\u306f\u3001{name}\u3055\u3093\"\n\nprint(greet(\"\u5c71\u7530\"))\n</code></pre>"},{"location":"python_basic/#5","title":"5. \u30ea\u30b9\u30c8\u30fb\u8f9e\u66f8\u30fb\u30bb\u30c3\u30c8","text":""},{"location":"python_basic/#_14","title":"\u306a\u305c\u5b66\u3076\u306e\u304b\uff1f","text":"<p>\u300c\u8907\u6570\u306e\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u300d\u3067\u304d\u308b\u3068\u3001\u696d\u52d9\u52b9\u7387\u304c\u5927\u5e45\u30a2\u30c3\u30d7\uff01</p>"},{"location":"python_basic/#_15","title":"\u73fe\u5834\u3067\u306e\u4f7f\u3044\u6240","text":"<ul> <li>\u9867\u5ba2\u30ea\u30b9\u30c8\u3001\u5546\u54c1\u4e00\u89a7\u3001\u8a2d\u5b9a\u5024\u306e\u7ba1\u7406</li> <li>API\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30d1\u30fc\u30b9</li> </ul>"},{"location":"python_basic/#_16","title":"\u89e3\u8aac","text":"<pre><code>fruits = [\"\u308a\u3093\u3054\", \"\u30d0\u30ca\u30ca\", \"\u307f\u304b\u3093\"]\nuser = {\"name\": \"\u7530\u4e2d\", \"age\": 30}\nunique_ids = {1, 2, 3}\n</code></pre>"},{"location":"python_basic/#6","title":"6. \u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\uff08\u5b9f\u8df5\u4f8b\uff09","text":""},{"location":"python_basic/#_17","title":"\u306a\u305c\u5b66\u3076\u306e\u304b\uff1f","text":"<p>\u300c\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u30fb\u8aad\u307f\u8fbc\u307f\u300d\u306f\u73fe\u5834\u3067\u5fc5\u9808\u3002</p>"},{"location":"python_basic/#_18","title":"\u89e3\u8aac","text":"<pre><code>with open(\"sample.txt\", \"w\", encoding=\"utf-8\") as f:\n    f.write(\"\u3053\u3093\u306b\u3061\u306f\\nPython!\\n\")\n\nwith open(\"sample.txt\", \"r\", encoding=\"utf-8\") as f:\n    for line in f:\n        print(line.strip())\n</code></pre>"},{"location":"python_basic/#7-api","title":"7. API\u9023\u643a\uff08\u5b9f\u8df5\u4f8b\uff09","text":""},{"location":"python_basic/#_19","title":"\u306a\u305c\u5b66\u3076\u306e\u304b\uff1f","text":"<p>\u300c\u4ed6\u30b7\u30b9\u30c6\u30e0\u3068\u9023\u643a\u300d\u3059\u308b\u3053\u3068\u3067\u3001\u696d\u52d9\u81ea\u52d5\u5316\u3084\u30c7\u30fc\u30bf\u9023\u643a\u304c\u53ef\u80fd\u306b\u3002</p>"},{"location":"python_basic/#_20","title":"\u89e3\u8aac","text":"<pre><code>import requests\nres = requests.get(\"https://api.github.com/users/octocat\")\ndata = res.json()\nprint(data[\"login\"])\n</code></pre>"},{"location":"python_basic/#_21","title":"\u7df4\u7fd2\u554f\u984c\uff08\u89e3\u7b54\u4f8b\u3064\u304d\uff09","text":""},{"location":"python_basic/#1_1","title":"\u554f\u984c1","text":"<p>\u300c\u5e74\u9f62\u3092\u5165\u529b\u3057\u300120\u6b73\u4ee5\u4e0a\u306a\u3089\"\u6210\u4eba\"\u3001\u672a\u6e80\u306a\u3089\"\u672a\u6210\u5e74\"\u3068\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\u300d</p>"},{"location":"python_basic/#_22","title":"\u89e3\u7b54\u4f8b","text":"<pre><code>age = int(input(\"\u5e74\u9f62\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \"))\nif age &gt;= 20:\n    print(\"\u6210\u4eba\")\nelse:\n    print(\"\u672a\u6210\u5e74\")\n</code></pre>"},{"location":"python_basic/#_23","title":"\u767a\u5c55\u8ab2\u984c","text":"<ul> <li>\u5165\u529b\u5024\u304c\u6570\u5b57\u3067\u306a\u3044\u5834\u5408\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u3082\u8ffd\u52a0\u3057\u3066\u307f\u3088\u3046</li> </ul>"},{"location":"python_basic/#qa","title":"\u3088\u304f\u3042\u308b\u9593\u9055\u3044\u30fbQ&amp;A","text":"<ul> <li>\u30a4\u30f3\u30c7\u30f3\u30c8\u30df\u30b9\uff08\u30b9\u30da\u30fc\u30b9\u3068\u30bf\u30d6\u306e\u6df7\u5728NG\uff09</li> <li>\u5909\u6570\u540d\u306e\u30b9\u30da\u30eb\u30df\u30b9</li> <li>input()\u306e\u623b\u308a\u5024\u306f\u6587\u5b57\u5217\u306a\u306e\u3067int\u5909\u63db\u304c\u5fc5\u8981</li> </ul> <p>\u3069\u3093\u306a\u5c0f\u3055\u306a\u7591\u554f\u3082\u5927\u6b53\u8fce\uff01\u300c\u306a\u305c\uff1f\u300d\u3092\u5927\u5207\u306b\u9032\u3081\u307e\u3057\u3087\u3046\u3002</p> <pre><code># \u57fa\u672c\u7684\u306a\u578b\nnum = 10        # \u6574\u6570 (int)\npi = 3.14       # \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (float)\ntext = \"Hello\"  # \u6587\u5b57\u5217 (str)\nis_active = True  # \u771f\u507d\u5024 (bool)\nnothing = None  # None\u578b\n\n# \u578b\u306e\u78ba\u8a8d\nprint(type(num))      # &lt;class 'int'&gt;\nprint(type(pi))       # &lt;class 'float'&gt;\nprint(type(text))     # &lt;class 'str'&gt;\nprint(type(is_active))  # &lt;class 'bool'&gt;\n</code></pre> <p>\u578b\u5909\u63db\uff08\u30ad\u30e3\u30b9\u30c8\uff09</p> <pre><code># \u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\nnum_str = \"42\"\nnum_int = int(num_str)\nnum_float = float(num_str)\n\n# \u6570\u5024\u304b\u3089\u6587\u5b57\u5217\u3078\nback_to_str = str(num_int)\n</code></pre> <p>\u6587\u5b57\u5217\u64cd\u4f5c</p> <pre><code># \u6587\u5b57\u5217\u9023\u7d50\ngreeting = \"Hello\"\nname = \"Python\"\nmessage = greeting + \", \" + name + \"!\"  # \"Hello, Python!\"\n\n# f-strings\uff08Python 3.6\u4ee5\u964d\uff09\nmessage = f\"{greeting}, {name}!\"  # \"Hello, Python!\"\n\n# \u6587\u5b57\u5217\u30e1\u30bd\u30c3\u30c9\nprint(\"python\".upper())  # \"PYTHON\"\nprint(\"PYTHON\".lower())  # \"python\"\nprint(\"  python  \".strip())  # \"python\"\nprint(\"python\".replace(\"p\", \"j\"))  # \"jython\"\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u540d\u524d\u3068\u5e74\u9f62\u3092\u5909\u6570\u306b\u5165\u308c\u3066\u3001\u81ea\u5df1\u7d39\u4ecb\u6587\u3092\u4f5c\u6210\u3057\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002    * \u4f8b\uff1a\u300c\u79c1\u306e\u540d\u524d\u306f\u3007\u3007\u3067\u3001\u5e74\u9f62\u306f\u3007\u3007\u6b73\u3067\u3059\u3002\u300d * \u5c0f\u6570\u70b9\u3092\u542b\u3080\u6570\u5024\u3092\u5165\u529b\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u3001\u6574\u6570\u90e8\u5206\u3068\u5c0f\u6570\u90e8\u5206\u3092\u5225\u3005\u306b\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"python_basic/#_24","title":"\u6761\u4ef6\u5206\u5c90","text":"<p>\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u51e6\u7406\u3092\u5909\u66f4\u3057\u307e\u3059\u3002</p> <pre><code>age = 20\nif age &gt;= 18:\n    print(\"\u6210\u4eba\")\nelse:\n    print(\"\u672a\u6210\u5e74\")\n\n# \u8907\u6570\u6761\u4ef6\nscore = 85\nif score &gt;= 90:\n    grade = \"A\"\nelif score &gt;= 80:\n    grade = \"B\"\nelif score &gt;= 70:\n    grade = \"C\"\nelse:\n    grade = \"D\"\nprint(f\"\u3042\u306a\u305f\u306e\u6210\u7e3e\u306f{grade}\u3067\u3059\")\n\n# \u8ad6\u7406\u6f14\u7b97\u5b50\nis_student = True\nhas_id = True\nif is_student and has_id:\n    print(\"\u5b66\u751f\u5272\u5f15\u304c\u9069\u7528\u3055\u308c\u307e\u3059\")\n\n# \u4e09\u9805\u6f14\u7b97\u5b50\nstatus = \"\u6210\u4eba\" if age &gt;= 18 else \"\u672a\u6210\u5e74\"\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u30e6\u30fc\u30b6\u30fc\u304c\u5165\u529b\u3057\u305f\u6570\u5024\u3092\u53d7\u3051\u53d6\u308a\u3001\u5076\u6570\u304b\u5947\u6570\u304b\u3092\u5224\u5b9a\u3057\u3001\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 * \u5e74\u9f62\u3068\u6027\u5225\u3092\u5165\u529b\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u3067\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002   * \u7537\u6027\u306720\u6b73\u4ee5\u4e0a: \"\u7537\u6027\u6210\u4eba\"   * \u5973\u6027\u306720\u6b73\u4ee5\u4e0a: \"\u5973\u6027\u6210\u4eba\"   * 20\u6b73\u672a\u6e80: \"\u672a\u6210\u5e74\"</p>"},{"location":"python_basic/#_25","title":"\u30eb\u30fc\u30d7\uff08\u7e70\u308a\u8fd4\u3057\uff09","text":"<p>\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3057\u884c\u3044\u307e\u3059\u3002</p> <pre><code># for \u30eb\u30fc\u30d7\nfor i in range(5):  # 0, 1, 2, 3, 4\n    print(i)\n\n# \u30ea\u30b9\u30c8\u3067\u306e\u30eb\u30fc\u30d7\nfruits = [\"apple\", \"banana\", \"cherry\"]\nfor fruit in fruits:\n    print(fruit)\n\n# \u8f9e\u66f8\u3067\u306e\u30eb\u30fc\u30d7\nperson = {\"name\": \"Alice\", \"age\": 25}\nfor key in person:\n    print(f\"{key}: {person[key]}\")\n\n# key, value\u306e\u30eb\u30fc\u30d7\nfor key, value in person.items():\n    print(f\"{key}: {value}\")\n\n# while \u30eb\u30fc\u30d7\ncount = 0\nwhile count &lt; 5:\n    print(count)\n    count += 1\n\n# break \u3068 continue\nfor i in range(10):\n    if i == 3:\n        continue  # \u3053\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u30b9\u30ad\u30c3\u30d7\n    if i == 7:\n        break  # \u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\n    print(i)\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * 1\u304b\u3089100\u307e\u3067\u306e\u6570\u5024\u306e\u3046\u3061\u3001\u5076\u6570\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3057\u3066\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 * FizzBuzz\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u30021\u304b\u308930\u307e\u3067\u306e\u6570\u5024\u3092\u30eb\u30fc\u30d7\u3057\u3001\u4ee5\u4e0b\u306e\u30eb\u30fc\u30eb\u3067\u51fa\u529b\u3057\u307e\u3059\u3002   * 3\u306e\u500d\u6570: \"Fizz\"   * 5\u306e\u500d\u6570: \"Buzz\"   * 3\u30685\u306e\u4e21\u65b9\u306e\u500d\u6570: \"FizzBuzz\"   * \u305d\u308c\u4ee5\u5916: \u6570\u5024\u305d\u306e\u3082\u306e</p>"},{"location":"python_basic/#_26","title":"\u95a2\u6570","text":"<p>\u518d\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u3067\u3059\u3002</p> <pre><code># \u57fa\u672c\u7684\u306a\u95a2\u6570\ndef greet(name):\n    \"\"\"\u6328\u62f6\u3092\u8fd4\u3059\u95a2\u6570\"\"\"\n    return f\"Hello, {name}!\"\n\nprint(greet(\"Alice\"))  # \"Hello, Alice!\"\n\n# \u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\ndef greet_with_time(name, time=\"morning\"):\n    return f\"Good {time}, {name}!\"\n\nprint(greet_with_time(\"Bob\"))  # \"Good morning, Bob!\"\nprint(greet_with_time(\"Carol\", \"evening\"))  # \"Good evening, Carol!\"\n\n# \u53ef\u5909\u9577\u5f15\u6570\ndef sum_all(*numbers):\n    total = 0\n    for num in numbers:\n        total += num\n    return total\n\nprint(sum_all(1, 2, 3, 4, 5))  # 15\n\n# \u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\ndef build_profile(first_name, last_name, **user_info):\n    profile = {\n        'first_name': first_name,\n        'last_name': last_name\n    }\n    profile.update(user_info)\n    return profile\n\nuser = build_profile('Albert', 'Einstein',\n                    location='Princeton',\n                    field='Physics')\nprint(user)\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u8907\u6570\u306e\u6570\u5024\u3092\u30ea\u30b9\u30c8\u3067\u53d7\u3051\u53d6\u308a\u3001\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u3092\u8fd4\u3059\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 * \u6442\u6c0f\u304b\u3089\u83ef\u6c0f\u3001\u304a\u3088\u3073\u83ef\u6c0f\u304b\u3089\u6442\u6c0f\u306b\u5909\u63db\u3059\u308b2\u3064\u306e\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u306b\u5fdc\u3058\u3066\u9069\u5207\u306a\u5909\u63db\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002   * \u6442\u6c0f\u304b\u3089\u83ef\u6c0f: F = C \u00d7 9/5 + 32   * \u83ef\u6c0f\u304b\u3089\u6442\u6c0f: C = (F - 32) \u00d7 5/9</p>"},{"location":"python_basic/#_27","title":"\u30ea\u30b9\u30c8\u3068\u8f9e\u66f8","text":"<p>\u8907\u6570\u306e\u30c7\u30fc\u30bf\u3092\u52b9\u7387\u7684\u306b\u7ba1\u7406\u3057\u307e\u3059\u3002</p>"},{"location":"python_basic/#_28","title":"\u30ea\u30b9\u30c8","text":"<pre><code># \u30ea\u30b9\u30c8\u306e\u4f5c\u6210\nfruits = [\"apple\", \"banana\", \"cherry\"]\n\n# \u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\nprint(fruits[0])  # \"apple\"\n\n# \u30ea\u30b9\u30c8\u306e\u64cd\u4f5c\nfruits.append(\"orange\")  # \u8ffd\u52a0\nfruits.insert(1, \"blueberry\")  # \u633f\u5165\nfruits.remove(\"banana\")  # \u524a\u9664\npopped = fruits.pop()  # \u6700\u5f8c\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\nprint(popped)  # \"orange\"\n\n# \u30ea\u30b9\u30c8\u306e\u30b9\u30e9\u30a4\u30b9\nnumbers = [0, 1, 2, 3, 4, 5]\nprint(numbers[1:4])  # [1, 2, 3]\nprint(numbers[:3])   # [0, 1, 2]\nprint(numbers[3:])   # [3, 4, 5]\nprint(numbers[::2])  # [0, 2, 4] - 2\u30b9\u30c6\u30c3\u30d7\u3054\u3068\n\n# \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\nsquares = [x**2 for x in range(10)]\nprint(squares)  # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n\neven_squares = [x**2 for x in range(10) if x % 2 == 0]\nprint(even_squares)  # [0, 4, 16, 36, 64]\n</code></pre>"},{"location":"python_basic/#_29","title":"\u30bf\u30d7\u30eb\uff08\u4e0d\u5909\u30ea\u30b9\u30c8\uff09","text":"<pre><code># \u30bf\u30d7\u30eb\u306e\u4f5c\u6210\ndimensions = (200, 50, 100)\n\n# \u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\nprint(dimensions[0])  # 200\n\n# \u30bf\u30d7\u30eb\u306f\u5909\u66f4\u4e0d\u53ef\n# dimensions[0] = 250  # \u30a8\u30e9\u30fc\n</code></pre>"},{"location":"python_basic/#_30","title":"\u8f9e\u66f8","text":"<pre><code># \u8f9e\u66f8\u306e\u4f5c\u6210\nperson = {\"name\": \"Alice\", \"age\": 25, \"city\": \"Tokyo\"}\n\n# \u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\nprint(person[\"name\"])  # \"Alice\"\n\n# \u8f9e\u66f8\u306e\u64cd\u4f5c\nperson[\"email\"] = \"alice@example.com\"  # \u8ffd\u52a0\nperson[\"age\"] = 26  # \u66f4\u65b0\ndel person[\"city\"]  # \u524a\u9664\n\n# \u30ad\u30fc\u306e\u5b58\u5728\u78ba\u8a8d\nif \"name\" in person:\n    print(\"Name exists!\")\n\n# get \u30e1\u30bd\u30c3\u30c9\uff08\u30ad\u30fc\u304c\u306a\u3044\u5834\u5408\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6307\u5b9a\uff09\nphone = person.get(\"phone\", \"\u672a\u767b\u9332\")\nprint(phone)  # \"\u672a\u767b\u9332\"\n\n# \u8f9e\u66f8\u5185\u5305\u8868\u8a18\nsquares_dict = {x: x**2 for x in range(5)}\nprint(squares_dict)  # {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}\n</code></pre>"},{"location":"python_basic/#_31","title":"\u30bb\u30c3\u30c8\uff08\u91cd\u8907\u306a\u3057\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\uff09","text":"<pre><code># \u30bb\u30c3\u30c8\u306e\u4f5c\u6210\nfruits_set = {\"apple\", \"banana\", \"cherry\", \"apple\"}\nprint(fruits_set)  # \u91cd\u8907\u306f\u81ea\u52d5\u7684\u306b\u9664\u53bb\u3055\u308c\u308b\n\n# \u30bb\u30c3\u30c8\u306e\u64cd\u4f5c\nfruits_set.add(\"orange\")\nfruits_set.remove(\"banana\")\n\n# \u30bb\u30c3\u30c8\u306e\u6f14\u7b97\nset_a = {1, 2, 3, 4, 5}\nset_b = {4, 5, 6, 7, 8}\nprint(set_a.union(set_b))        # \u548c\u96c6\u5408: {1, 2, 3, 4, 5, 6, 7, 8}\nprint(set_a.intersection(set_b))  # \u7a4d\u96c6\u5408: {4, 5}\nprint(set_a.difference(set_b))   # \u5dee\u96c6\u5408: {1, 2, 3}\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u8f9e\u66f8\u578b\u3092\u4f7f\u3044\u3001\u81ea\u5206\u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3066\u3001\u5168\u3066\u306e\u9805\u76ee\u3092\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 * \u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u5185\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3001\u8f9e\u66f8\u3068\u3057\u3066\u8fd4\u3059\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070 \"hello world hello\" \u3068\u3044\u3046\u5165\u529b\u306b\u5bfe\u3057\u3066 {\"hello\": 2, \"world\": 1} \u3068\u3044\u3046\u8f9e\u66f8\u3092\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"python_basic/#_32","title":"\u30a8\u30e9\u30fc\u51e6\u7406","text":"<pre><code># \u57fa\u672c\u7684\u306a\u4f8b\u5916\u51e6\u7406\ntry:\n    number = int(input(\"\u6570\u5b57\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \"))\n    result = 10 / number\n    print(f\"\u7d50\u679c: {result}\")\nexcept ValueError:\n    print(\"\u6709\u52b9\u306a\u6570\u5b57\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\nexcept ZeroDivisionError:\n    print(\"0\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\")\nexcept Exception as e:\n    print(f\"\u4e88\u671f\u305b\u306c\u30a8\u30e9\u30fc: {e}\")\nelse:\n    print(\"\u30a8\u30e9\u30fc\u306a\u304f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\")\nfinally:\n    print(\"\u51e6\u7406\u3092\u7d42\u4e86\u3057\u307e\u3059\")\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u30e6\u30fc\u30b6\u30fc\u306b\uff12\u3064\u306e\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u3082\u3089\u3044\u3001\u5272\u308a\u7b97\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30bc\u30ed\u9664\u7b97\u3084\u6570\u5024\u4ee5\u5916\u306e\u5165\u529b\u306b\u5bfe\u3057\u3066\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"python_basic/#_33","title":"\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c","text":"<pre><code># \u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\nwith open('sample.txt', 'w', encoding='utf-8') as file:\n    file.write('Python\u3067\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\\n')\n    file.write('2\u884c\u76ee\u306e\u30c6\u30ad\u30b9\u30c8\\n')\n\n# \u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\nwith open('sample.txt', 'r', encoding='utf-8') as file:\n    content = file.read()\n    print(content)\n\n# 1\u884c\u305a\u3064\u8aad\u307f\u8fbc\u307f\nwith open('sample.txt', 'r', encoding='utf-8') as file:\n    for line in file:\n        print(line.strip())  # \u672b\u5c3e\u306e\u6539\u884c\u3092\u9664\u53bb\n</code></pre> <p>\u7df4\u7fd2\u554f\u984c: * \u30e6\u30fc\u30b6\u30fc\u304c\u5165\u529b\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u8ffd\u8a18\u3057\u3001\u305d\u306e\u5f8c\u30d5\u30a1\u30a4\u30eb\u306e\u5168\u5185\u5bb9\u3092\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 </p>"},{"location":"python_basic_collection/","title":"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\uff08\u30ea\u30b9\u30c8\u30fb\u8f9e\u66f8\u30fb\u30bb\u30c3\u30c8\uff09","text":""},{"location":"python_basic_collection/#_2","title":"\u30ea\u30b9\u30c8","text":"<p>\u300c\u9806\u756a\u306b\u4e26\u3093\u3060\u30c7\u30fc\u30bf\u306e\u96c6\u307e\u308a\u300d\u3067\u3059\u3002</p> <pre><code>fruits = [\"\u308a\u3093\u3054\", \"\u30d0\u30ca\u30ca\", \"\u307f\u304b\u3093\"]\nprint(fruits[0])  # \u308a\u3093\u3054\n</code></pre>"},{"location":"python_basic_collection/#_3","title":"\u8f9e\u66f8\uff08\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\uff09","text":"<p>\u300c\u540d\u524d\u3068\u5024\u306e\u30da\u30a2\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u300d\u3067\u304d\u307e\u3059\u3002</p> <pre><code>person = {\"name\": \"\u305f\u308d\u3046\", \"age\": 25}\nprint(person[\"name\"])  # \u305f\u308d\u3046\n</code></pre>"},{"location":"python_basic_collection/#_4","title":"\u30bb\u30c3\u30c8","text":"<p>\u300c\u91cd\u8907\u306a\u3057\u300d\u306e\u96c6\u307e\u308a\u3002\u9806\u756a\u306f\u6c17\u306b\u3057\u306a\u3044\u3002</p> <pre><code>colors = {\"\u8d64\", \"\u9752\", \"\u7dd1\", \"\u8d64\"}\nprint(colors)  # {'\u8d64', '\u9752', '\u7dd1'}\n</code></pre>"},{"location":"python_basic_collection/#qa","title":"\u3088\u304f\u3042\u308b\u9593\u9055\u3044\u30fbQ&amp;A","text":"<ul> <li>\u30ea\u30b9\u30c8\u306f\u300c[]\u300d\u3001\u8f9e\u66f8\u306f\u300c{}\u300d\u3067\u4f5c\u308b</li> <li>\u8f9e\u66f8\u306e\u30ad\u30fc\u304c\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\uff08.get()\u3067\u56de\u907f\u53ef\uff09</li> <li>\u30bb\u30c3\u30c8\u306f\u9806\u756a\u304c\u4fdd\u8a3c\u3055\u308c\u306a\u3044</li> </ul> <p>\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3068\u300c\u305f\u304f\u3055\u3093\u306e\u30c7\u30fc\u30bf\u300d\u3092\u30e9\u30af\u306b\u6271\u3048\u307e\u3059\uff01 </p> <p>\u25c0 \u623b\u308b\uff1a\u95a2\u6570\u3000\uff5c\u3000\u6b21\u3078 \u25b6 \u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c </p>"},{"location":"python_basic_error/","title":"\u30a8\u30e9\u30fc\u51e6\u7406","text":""},{"location":"python_basic_error/#_2","title":"\u30a8\u30e9\u30fc\u51e6\u7406\u3068\u306f\uff1f","text":"<p>\u300c\u4e88\u671f\u3057\u306a\u3044\u5931\u6557\u304c\u8d77\u304d\u3066\u3082\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u6b62\u307e\u3089\u305a\u5b89\u5168\u306b\u52d5\u304f\u300d\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002</p>"},{"location":"python_basic_error/#try-except","title":"try-except\u306e\u57fa\u672c","text":"<pre><code>try:\n    num = int(input(\"\u6570\u5b57\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \"))\n    print(10 / num)\nexcept ValueError:\n    print(\"\u6570\u5b57\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\nexcept ZeroDivisionError:\n    print(\"0\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\")\n</code></pre>"},{"location":"python_basic_error/#finally","title":"finally\uff08\u5fc5\u305a\u5b9f\u884c\uff09","text":"<pre><code>try:\n    f = open(\"sample.txt\")\n    # \u4f55\u304b\u51e6\u7406\nfinally:\n    f.close()  # \u3053\u3053\u306f\u5fc5\u305a\u5b9f\u884c\u3055\u308c\u308b\n</code></pre>"},{"location":"python_basic_error/#qa","title":"\u3088\u304f\u3042\u308b\u9593\u9055\u3044\u30fbQ&amp;A","text":"<ul> <li>except\u306e\u5f8c\u308d\u306f\u30a8\u30e9\u30fc\u306e\u7a2e\u985e\u3092\u66f8\u304f\uff08\u4f8b\uff1aValueError\uff09</li> <li>\u3069\u3093\u306a\u30a8\u30e9\u30fc\u3082\u30ad\u30e3\u30c3\u30c1\u3057\u305f\u3044\u6642\u306f except Exception: \u3067\u3082OK</li> <li>\u30a8\u30e9\u30fc\u6587\u3092\u3088\u304f\u8aad\u3080\u3068\u539f\u56e0\u304c\u5206\u304b\u308b</li> </ul> <p>\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u899a\u3048\u308b\u3068\u300c\u5b89\u5fc3\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u52d5\u304b\u305b\u308b\u300d\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff01</p> <p>\u25c0 \u623b\u308b\uff1a\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c </p>"},{"location":"python_basic_file/","title":"\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c","text":""},{"location":"python_basic_file/#_2","title":"\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u3068\u306f\uff1f","text":"<p>\u300c\u30c7\u30fc\u30bf\u3092\u30d1\u30bd\u30b3\u30f3\u306b\u4fdd\u5b58\u3057\u305f\u308a\u3001\u8aad\u307f\u8fbc\u3093\u3060\u308a\u300d\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002</p>"},{"location":"python_basic_file/#_3","title":"\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u66f8\u304d\u8fbc\u307f","text":"<pre><code>with open(\"sample.txt\", \"w\", encoding=\"utf-8\") as f:\n    f.write(\"\u3053\u3093\u306b\u3061\u306f\\nPython!\\n\")\n</code></pre> <ul> <li><code>with open(...)</code>\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f</li> <li><code>\"w\"</code>\u306f\u300c\u66f8\u304d\u8fbc\u307f\u30e2\u30fc\u30c9\u300d</li> </ul>"},{"location":"python_basic_file/#_4","title":"\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f","text":"<pre><code>with open(\"sample.txt\", \"r\", encoding=\"utf-8\") as f:\n    for line in f:\n        print(line.strip())\n</code></pre> <ul> <li><code>\"r\"</code>\u306f\u300c\u8aad\u307f\u8fbc\u307f\u30e2\u30fc\u30c9\u300d</li> <li><code>strip()</code>\u3067\u6539\u884c\u3092\u6d88\u3059</li> </ul>"},{"location":"python_basic_file/#qa","title":"\u3088\u304f\u3042\u308b\u9593\u9055\u3044\u30fbQ&amp;A","text":"<ul> <li>\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30d1\u30b9\u306e\u9593\u9055\u3044\u306b\u6ce8\u610f</li> <li>\u66f8\u304d\u8fbc\u307f\u6642\u306f\"w\"\u3001\u8aad\u307f\u8fbc\u307f\u6642\u306f\"r\"</li> <li>\u30d5\u30a1\u30a4\u30eb\u3092\u9589\u3058\u5fd8\u308c\u306a\u3044\uff08with\u6587\u306a\u3089\u81ea\u52d5\u3067OK\uff09</li> </ul> <p>\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u3092\u899a\u3048\u308b\u3068\u300c\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u30fb\u6d3b\u7528\u300d\u304c\u30b0\u30c3\u3068\u5e83\u304c\u308a\u307e\u3059\uff01 </p> <p>\u25c0 \u623b\u308b\uff1a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3000\uff5c\u3000\u6b21\u3078 \u25b6 \u30a8\u30e9\u30fc\u51e6\u7406 </p>"},{"location":"python_basic_func/","title":"\u95a2\u6570","text":""},{"location":"python_basic_func/#_2","title":"\u95a2\u6570\u3068\u306f\uff1f","text":"<p>\u300c\u3088\u304f\u4f7f\u3046\u51e6\u7406\u306b\u540d\u524d\u3092\u3064\u3051\u3066\u3001\u4f55\u5ea6\u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u300d\u4ed5\u7d44\u307f\u3067\u3059\u3002</p>"},{"location":"python_basic_func/#_3","title":"\u95a2\u6570\u306e\u4f5c\u308a\u65b9","text":"<pre><code>def say_hello():\n    print(\"\u3053\u3093\u306b\u3061\u306f\uff01\")\n\nsay_hello()  # \u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n</code></pre>"},{"location":"python_basic_func/#_4","title":"\u5f15\u6570\u3068\u623b\u308a\u5024","text":"<pre><code>def greet(name):\n    return f\"\u3053\u3093\u306b\u3061\u306f\u3001{name}\u3055\u3093\"\n\nmessage = greet(\"\u305f\u308d\u3046\")\nprint(message)\n</code></pre> <ul> <li><code>name</code>\u304c\u300c\u5f15\u6570\u300d</li> <li><code>return</code>\u3067\u5024\u3092\u8fd4\u3059\uff08\u623b\u308a\u5024\uff09</li> </ul>"},{"location":"python_basic_func/#qa","title":"\u3088\u304f\u3042\u308b\u9593\u9055\u3044\u30fbQ&amp;A","text":"<ul> <li>def\u306e\u5f8c\u308d\u306f\u30b3\u30ed\u30f3\u300c:\u300d\u5fc5\u9808</li> <li>\u547c\u3073\u51fa\u3057\u6642\u306f\u30ab\u30c3\u30b3\u3092\u5fd8\u308c\u305a\u306b\uff08\u4f8b\uff1asay_hello()\uff09</li> <li>return\u304c\u306a\u3044\u3068\u300cNone\u300d\u304c\u8fd4\u308b</li> </ul> <p>\u95a2\u6570\u3092\u4f7f\u3046\u3068\u300c\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u30b9\u30c3\u30ad\u30ea\u300d\u300c\u518d\u5229\u7528\u3057\u3084\u3059\u3044\u300d\uff01 </p> <p>\u25c0 \u623b\u308b\uff1a\u30eb\u30fc\u30d7\u3000\uff5c\u3000\u6b21\u3078 \u25b6 \u30b3\u30ec\u30af\u30b7\u30e7\u30f3 </p>"},{"location":"python_basic_if/","title":"\u6761\u4ef6\u5206\u5c90","text":""},{"location":"python_basic_if/#_2","title":"\u6761\u4ef6\u5206\u5c90\u3068\u306f\uff1f","text":"<p>\u300c\u3082\u3057\u25cb\u25cb\u306a\u3089\u301c\u3059\u308b\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u301c\u3059\u308b\u300d\u3068\u3044\u3046\"\u5206\u304b\u308c\u9053\"\u3092\u4f5c\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002</p>"},{"location":"python_basic_if/#if","title":"if\u6587\u306e\u57fa\u672c","text":"<pre><code>age = 18\nif age &gt;= 20:\n    print(\"\u304a\u3068\u306a\u3067\u3059\")\nelse:\n    print(\"\u307e\u3060\u672a\u6210\u5e74\u3067\u3059\")\n</code></pre> <ul> <li><code>if</code> \u306e\u5f8c\u308d\u306b\u300c\u6761\u4ef6\u300d\u3092\u66f8\u304d\u307e\u3059</li> <li>\u6761\u4ef6\u304c\u300cTrue\u300d\u306a\u3089\u4e0a\u306e\u30d6\u30ed\u30c3\u30af\u3001\u9055\u3048\u3070<code>else</code>\u306e\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059</li> </ul>"},{"location":"python_basic_if/#elif","title":"elif\uff08\u8ffd\u52a0\u306e\u5206\u5c90\uff09","text":"<pre><code>score = 75\nif score &gt;= 80:\n    print(\"\u3088\u304f\u3067\u304d\u307e\u3057\u305f\")\nelif score &gt;= 60:\n    print(\"\u5408\u683c\u3067\u3059\")\nelse:\n    print(\"\u518d\u30c1\u30e3\u30ec\u30f3\u30b8\uff01\")\n</code></pre>"},{"location":"python_basic_if/#qa","title":"\u3088\u304f\u3042\u308b\u9593\u9055\u3044\u30fbQ&amp;A","text":"<ul> <li>\u30b3\u30ed\u30f3\u300c:\u300d\u306e\u4ed8\u3051\u5fd8\u308c\u306b\u6ce8\u610f</li> <li>\u30a4\u30f3\u30c7\u30f3\u30c8\uff08\u5b57\u4e0b\u3052\uff09\u306f\u5fc5\u305a\u534a\u89d2\u30b9\u30da\u30fc\u30b94\u3064\uff08\u307e\u305f\u306fTab\uff09</li> <li>\u6bd4\u8f03\u6f14\u7b97\u5b50\uff08==, &gt;=, &lt;=, != \u306a\u3069\uff09\u3092\u6b63\u3057\u304f\u4f7f\u304a\u3046</li> </ul> <p>\u6761\u4ef6\u5206\u5c90\u306f\u300c\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5224\u65ad\u3055\u305b\u308b\u300d\u305f\u3081\u306e\u5927\u4e8b\u306a\u4ed5\u7d44\u307f\u3067\u3059\uff01 </p> <p>\u25c0 \u623b\u308b\uff1a\u5909\u6570\u3068\u578b\u3000\uff5c\u3000\u6b21\u3078 \u25b6 \u30eb\u30fc\u30d7 </p>"},{"location":"python_basic_loop/","title":"\u30eb\u30fc\u30d7\uff08\u7e70\u308a\u8fd4\u3057\uff09","text":""},{"location":"python_basic_loop/#_2","title":"\u30eb\u30fc\u30d7\u3068\u306f\uff1f","text":"<p>\u300c\u540c\u3058\u51e6\u7406\u3092\u4f55\u5ea6\u3082\u7e70\u308a\u8fd4\u3059\u300d\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002</p>"},{"location":"python_basic_loop/#for","title":"for\u6587\u306e\u57fa\u672c","text":"<pre><code>for i in range(5):\n    print(i)\n</code></pre> <ul> <li>0, 1, 2, 3, 4 \u3068\u9806\u756a\u306b\u8868\u793a\u3055\u308c\u307e\u3059</li> <li><code>range(5)</code>\u306f\u300c0\u304b\u30894\u307e\u3067\u300d\u306e\u6570\u5b57\u3092\u4f5c\u308b\u547d\u4ee4\u3067\u3059</li> </ul>"},{"location":"python_basic_loop/#_3","title":"\u30ea\u30b9\u30c8\u306e\u30eb\u30fc\u30d7","text":"<pre><code>fruits = [\"\u308a\u3093\u3054\", \"\u30d0\u30ca\u30ca\", \"\u307f\u304b\u3093\"]\nfor fruit in fruits:\n    print(fruit)\n</code></pre>"},{"location":"python_basic_loop/#while","title":"while\u6587\u306e\u57fa\u672c","text":"<pre><code>count = 0\nwhile count &lt; 3:\n    print(count)\n    count += 1\n</code></pre>"},{"location":"python_basic_loop/#qa","title":"\u3088\u304f\u3042\u308b\u9593\u9055\u3044\u30fbQ&amp;A","text":"<ul> <li>\u7121\u9650\u30eb\u30fc\u30d7\u306b\u6ce8\u610f\uff08while\u306e\u6761\u4ef6\u304c\u305a\u3063\u3068True\u3060\u3068\u6b62\u307e\u3089\u306a\u3044\uff09</li> <li>for/while\u306e\u5f8c\u308d\u306f\u30b3\u30ed\u30f3\u300c:\u300d\u5fc5\u9808</li> <li>\u30a4\u30f3\u30c7\u30f3\u30c8\u5fd8\u308c\u306b\u6ce8\u610f</li> </ul> <p>\u30eb\u30fc\u30d7\u3092\u4f7f\u3046\u3068\u300c\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u51e6\u7406\u300d\u3084\u300c\u81ea\u52d5\u5316\u300d\u304c\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\uff01</p> <p>\u25c0 \u623b\u308b\uff1a\u6761\u4ef6\u5206\u5c90\u3000\uff5c\u3000\u6b21\u3078 \u25b6 \u95a2\u6570 </p>"},{"location":"python_basic_variables/","title":"\u5909\u6570\u3068\u578b","text":""},{"location":"python_basic_variables/#_2","title":"\u5909\u6570\u3068\u306f\uff1f","text":"<p>\u5909\u6570\u306f\u300c\u30c7\u30fc\u30bf\uff08\u5024\uff09\u306b\u540d\u524d\u3092\u3064\u3051\u3066\u4fdd\u5b58\u3059\u308b\u7bb1\u300d\u3067\u3059\u3002</p> <ul> <li>\u4f8b\uff1a</li> </ul> <pre><code>name = \"\u305f\u308d\u3046\"\nage = 25\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f\u3001<code>name</code> \u3068\u3044\u3046\u7bb1\u306b\u300c\u305f\u308d\u3046\u300d\u3001<code>age</code> \u3068\u3044\u3046\u7bb1\u306b\u300c25\u300d\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"python_basic_variables/#_3","title":"\u578b\uff08\u30c7\u30fc\u30bf\u306e\u7a2e\u985e\uff09","text":"<p>Python\u306b\u306f\u3044\u308d\u3044\u308d\u306a\u300c\u578b\u300d\u304c\u3042\u308a\u307e\u3059\u3002 - \u6587\u5b57\u5217\uff08str\uff09\uff1a\"\u3053\u3093\u306b\u3061\u306f\" - \u6574\u6570\uff08int\uff09\uff1a10, -5 - \u5c0f\u6570\uff08float\uff09\uff1a3.14, -0.5 - \u771f\u507d\u5024\uff08bool\uff09\uff1aTrue, False</p>"},{"location":"python_basic_variables/#_4","title":"\u578b\u306e\u81ea\u52d5\u5224\u5225","text":"<p>Python\u306f\u300c=\u300d\u3067\u5024\u3092\u5165\u308c\u308b\u3068\u3001\u81ea\u52d5\u3067\u578b\u3092\u5224\u65ad\u3057\u3066\u304f\u308c\u307e\u3059\u3002</p> <pre><code>x = 10      # \u6574\u6570\uff08int\uff09\ny = \"abc\"  # \u6587\u5b57\u5217\uff08str\uff09\n</code></pre>"},{"location":"python_basic_variables/#_5","title":"\u578b\u306e\u78ba\u8a8d","text":"<pre><code>print(type(x))  # &lt;class 'int'&gt;\nprint(type(y))  # &lt;class 'str'&gt;\n</code></pre>"},{"location":"python_basic_variables/#qa","title":"\u3088\u304f\u3042\u308b\u9593\u9055\u3044\u30fbQ&amp;A","text":"<ul> <li>\u5909\u6570\u540d\u306f\u82f1\u6570\u5b57\u3068\u300c_\u300d\u3060\u3051\u3002\u65e5\u672c\u8a9e\u3082\u4f7f\u3048\u308b\u3051\u3069\u82f1\u8a9e\u63a8\u5968</li> <li>\u5909\u6570\u540d\u306e\u6700\u521d\u306f\u6570\u5b57NG\uff08\u4f8b\uff1a1name\u306f\u30c0\u30e1\uff09</li> <li>\u578b\u304c\u9055\u3046\u3068\u8a08\u7b97\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u3042\u308b</li> </ul> <p>\u5909\u6570\u306f\u300c\u30c7\u30fc\u30bf\u306b\u540d\u524d\u3092\u3064\u3051\u3066\u7ba1\u7406\u3059\u308b\u300d\u305f\u3081\u306e\u5927\u4e8b\u306a\u9053\u5177\u3067\u3059\uff01 </p> <p>\u6b21\u3078 \u25b6 \u6761\u4ef6\u5206\u5c90 </p>"},{"location":"python_env/","title":"Python\u74b0\u5883\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\uff08\u521d\u5fc3\u8005\u5411\u3051\u30ac\u30a4\u30c9\uff09","text":"<p>Python\u3092\u4f7f\u3044\u59cb\u3081\u308b\u306b\u306f\u300c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u300d\u300c\u30a8\u30c7\u30a3\u30bf\u306e\u6e96\u5099\u300d\u300c\u4eee\u60f3\u74b0\u5883\u300d\u306e3\u3064\u304c\u5927\u5207\u3067\u3059\u3002 \u4e8b\u524d\u6e96\u5099\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u307e\u3067\u5b8c\u4e86\u3057\u3066\u3044\u308b\u65b9\u306f\u30013. \u4eee\u60f3\u74b0\u5883\u3068\u306f\uff1f\u307e\u3067\u9032\u3093\u3067\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"python_env/#1-python","title":"1. Python\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":""},{"location":"python_env/#windows","title":"Windows\u306e\u5834\u5408","text":"<ol> <li>\u516c\u5f0f\u30b5\u30a4\u30c8\uff08https://www.python.org/downloads/\uff09\u304b\u3089\u6700\u65b0\u7248\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9</li> <li>\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c\u3057\u300cAdd Python to PATH\u300d\u306b\u5fc5\u305a\u30c1\u30a7\u30c3\u30af</li> <li>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u3001\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u3067 <code>python --version</code> \u3092\u5b9f\u884c\u3057\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8868\u793a\u3055\u308c\u308c\u3070OK</li> </ol>"},{"location":"python_env/#mac","title":"Mac\u306e\u5834\u5408","text":"<ul> <li>macOS\u306b\u306f\u6700\u521d\u304b\u3089Python\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u65b0\u7248\u3092\u4f7f\u3046\u306b\u306f\u300cHomebrew\u300d\u3084\u300cpyenv\u300d\u304c\u304a\u3059\u3059\u3081\u3067\u3059\u3002</li> <li>\u4f8b\uff1a</li> </ul> <pre><code>brew install pyenv\npyenv install 3.11.0\npyenv global 3.11.0\npython --version\n</code></pre>"},{"location":"python_env/#linux","title":"Linux\u306e\u5834\u5408","text":"<ul> <li>\u591a\u304f\u306e\u30c7\u30a3\u30b9\u30c8\u30ea\u3067 <code>sudo apt install python3</code> \u306a\u3069\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002</li> </ul>"},{"location":"python_env/#2","title":"2. \u30a8\u30c7\u30a3\u30bf\uff08\u958b\u767a\u30c4\u30fc\u30eb\uff09\u306e\u6e96\u5099","text":"<ul> <li>VS Code\uff08\u7121\u6599\u30fb\u591a\u6a5f\u80fd\u30fb\u304a\u3059\u3059\u3081\uff09</li> <li>https://code.visualstudio.com/ \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9</li> <li>\u300cPython\u62e1\u5f35\u6a5f\u80fd\u300d\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</li> <li>PyCharm\uff08\u672c\u683c\u6d3e\u5411\u3051\uff09</li> <li>\u30e1\u30e2\u5e33\u3084\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3067\u3082OK\u3067\u3059\u304c\u3001VS Code\u63a8\u5968</li> </ul>"},{"location":"python_env/#3","title":"3. \u4eee\u60f3\u74b0\u5883\u3068\u306f\uff1f","text":"<ul> <li>\u4eee\u60f3\u74b0\u5883\u306f\u300c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3054\u3068\u306b\u4f7f\u3046Python\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5206\u3051\u3066\u7ba1\u7406\u3067\u304d\u308b\u7bb1\u300d\u3067\u3059\u3002</li> <li>\u3053\u308c\u306b\u3088\u308a\u3001\u4ed6\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u3076\u3064\u304b\u3089\u305a\u5b89\u5fc3\u3067\u3059\u3002</li> </ul>"},{"location":"python_env/#windowsmaclinux","title":"\u4eee\u60f3\u74b0\u5883\u306e\u4f5c\u308a\u65b9\uff08Windows/Mac/Linux\u5171\u901a\uff09","text":"<pre><code># venv\u3092\u4f7f\u3046\u4f8b\uff08\u6a19\u6e96\u6a5f\u80fd\uff09\npython -m venv venv\n\n# \u4eee\u60f3\u74b0\u5883\u3092\u6709\u52b9\u5316\n# Windows:\nvenv\\Scripts\\activate\n# Mac/Linux:\nsource venv/bin/activate\n\n# \u4eee\u60f3\u74b0\u5883\u3092\u629c\u3051\u308b\ndeactivate\n</code></pre>"},{"location":"python_env/#4-pip","title":"4. \u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\uff08pip\uff09","text":"<ul> <li>Python\u306e\u8ffd\u52a0\u6a5f\u80fd\uff08\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\u306f\u300cpip\u300d\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002</li> <li>\u4f8b\uff1a</li> </ul> <pre><code>pip install requests\npip list\npip freeze &gt; requirements.txt\npip install -r requirements.txt\n</code></pre>"},{"location":"python_env/#5-qa","title":"5. \u3088\u304f\u3042\u308b\u30c8\u30e9\u30d6\u30ebQ&amp;A","text":"<ul> <li>python\u30b3\u30de\u30f3\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u3044 \u2192 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3084PATH\u8a2d\u5b9a\u3092\u518d\u78ba\u8a8d</li> <li>pip\u304c\u4f7f\u3048\u306a\u3044 \u2192 <code>python -m ensurepip --upgrade</code> \u3067\u5fa9\u65e7\u3067\u304d\u308b\u5834\u5408\u3042\u308a</li> <li>\u4eee\u60f3\u74b0\u5883\u304c\u6709\u52b9\u5316\u3067\u304d\u306a\u3044 \u2192 \u30b3\u30de\u30f3\u30c9\u306e\u30b9\u30da\u30eb\u3084\u30d1\u30b9\u3092\u518d\u78ba\u8a8d</li> <li>\u65e5\u672c\u8a9e\u304c\u6587\u5b57\u5316\u3051\u3059\u308b \u2192 \u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\u6642\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092UTF-8\u306b</li> </ul> <p>\u5206\u304b\u3089\u306a\u3044\u3053\u3068\u306f\u300c\u30a8\u30e9\u30fc\u6587\u3092\u30b3\u30d4\u30da\u3057\u3066\u691c\u7d22\u300d\u3082\u6709\u52b9\u3067\u3059\u3002\u7126\u3089\u305a\u4e00\u6b69\u305a\u3064\u9032\u3081\u307e\u3057\u3087\u3046\uff01 </p>"},{"location":"python_intro/","title":"Python\u3068\u306f\uff1f","text":""},{"location":"python_intro/#python_1","title":"\u306a\u305c\u4ecaPython\u306a\u306e\u304b","text":"<p>Python\u306f\u300c\u30b7\u30f3\u30d7\u30eb\u3067\u8aad\u307f\u3084\u3059\u3044\u300d\u300c\u5b66\u7fd2\u30b3\u30b9\u30c8\u304c\u4f4e\u3044\u300d\u300c\u73fe\u5834\u3067\u306e\u6d3b\u7528\u7bc4\u56f2\u304c\u5e83\u3044\u300d\u3053\u3068\u304b\u3089\u3001\u4e16\u754c\u4e2d\u306e\u4f01\u696d\u3084\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u9078\u3070\u308c\u3066\u3044\u307e\u3059\u3002</p> <ul> <li>2020\u5e74\u4ee3\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0\u3067\u5e38\u306b\u4e0a\u4f4d</li> <li>Web\u958b\u767a\u3001\u30c7\u30fc\u30bf\u5206\u6790\u3001AI\u3001\u696d\u52d9\u81ea\u52d5\u5316\u306a\u3069\u591a\u69d8\u306a\u5206\u91ce\u3067\u6d3b\u8e8d</li> <li>\u65e5\u672c\u56fd\u5185\u3067\u3082\u91d1\u878d\u30fb\u88fd\u9020\u30fb\u5b98\u516c\u5e81\u306a\u3069\u5e45\u5e83\u3044\u73fe\u5834\u3067\u5c0e\u5165\u5b9f\u7e3e\u3042\u308a</li> </ul>"},{"location":"python_intro/#python_2","title":"Python\u306e\u6b74\u53f2\u3068\u9032\u5316","text":"<ul> <li>1991\u5e74\u3001\u30aa\u30e9\u30f3\u30c0\u306e\u30b0\u30a4\u30c9\u30fb\u30f4\u30a1\u30f3\u30ed\u30c3\u30b5\u30e0\u6c0f\u304c\u958b\u767a</li> <li>\u300c\u8ab0\u304c\u8aad\u3093\u3067\u3082\u5206\u304b\u308a\u3084\u3059\u3044\u30b3\u30fc\u30c9\u300d\u3092\u76ee\u6307\u3057\u3066\u8a2d\u8a08</li> <li>2\u7cfb\u21923\u7cfb\u3078\u306e\u5927\u304d\u306a\u9032\u5316\uff08\u73fe\u5728\u306f3\u7cfb\u304c\u4e3b\u6d41\uff09</li> <li>\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067\u4e16\u754c\u4e2d\u306e\u958b\u767a\u8005\u304c\u6539\u826f\u306b\u53c2\u52a0</li> </ul>"},{"location":"python_intro/#_1","title":"\u4ed6\u8a00\u8a9e\u3068\u306e\u6bd4\u8f03","text":"\u8a00\u8a9e \u7279\u5fb4\u30fb\u7528\u9014\u4f8b Python\u3068\u306e\u9055\u3044 COBOL \u57fa\u5e79\u696d\u52d9\u30fb\u30d0\u30c3\u30c1\u51e6\u7406 \u30ec\u30ac\u30b7\u30fc\u8cc7\u7523\u304c\u591a\u3044 Java \u5927\u898f\u6a21Web/\u696d\u52d9\u30b7\u30b9\u30c6\u30e0 \u9759\u7684\u578b\u4ed8\u3051\u30fb\u5197\u9577\u306a\u8a18\u8ff0 JavaScript \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9/Node.js Web\u30d6\u30e9\u30a6\u30b6\u3067\u52d5\u4f5c Python Web/AI/\u81ea\u52d5\u5316/\u6559\u80b2\u306a\u3069 \u30b7\u30f3\u30d7\u30eb\u30fb\u591a\u7528\u9014"},{"location":"python_intro/#pythonthe-zen-of-python","title":"Python\u306e\u54f2\u5b66\uff08The Zen of Python\uff09","text":"<p>Python\u306b\u306f\u300c\u7f8e\u3057\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u305f\u3081\u306e\u54f2\u5b66\u300d\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>import this\n</code></pre> <p>Beautiful is better than ugly.\uff08\u7f8e\u306f\u919c\u3055\u306b\u52dd\u308b\uff09 Simple is better than complex.\uff08\u30b7\u30f3\u30d7\u30eb\u306f\u8907\u96d1\u306b\u52dd\u308b\uff09</p> <p>\u306a\u3069\u3001\u73fe\u5834\u3067\u3082\u5927\u5207\u306b\u3055\u308c\u308b\u8003\u3048\u65b9\u304c\u8a70\u307e\u3063\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"python_intro/#python_3","title":"Python\u306e\u4e3b\u306a\u7279\u5fb4","text":"<ul> <li>\u30a4\u30f3\u30c7\u30f3\u30c8\u3067\u69cb\u9020\u3092\u8868\u73fe\uff1a\u53ef\u8aad\u6027\u304c\u9ad8\u3044</li> <li>\u52d5\u7684\u578b\u4ed8\u3051\uff1a\u67d4\u8edf\u3067\u7d20\u65e9\u3044\u958b\u767a\u304c\u53ef\u80fd</li> <li>\u8c4a\u5bcc\u306a\u6a19\u6e96/\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\uff1aAPI\u958b\u767a\u3001\u30c7\u30fc\u30bf\u51e6\u7406\u3001AI\u306a\u3069\u4f55\u3067\u3082\u3067\u304d\u308b</li> <li>\u30de\u30eb\u30c1\u30d1\u30e9\u30c0\u30a4\u30e0\uff1a\u624b\u7d9a\u304d\u578b\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30fb\u95a2\u6570\u578b\u3082OK</li> <li>\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\uff1aWindows/Mac/Linux\u3067\u540c\u3058\u30b3\u30fc\u30c9\u304c\u52d5\u304f</li> </ul>"},{"location":"python_intro/#python_4","title":"\u73fe\u5834\u3067\u306ePython\u6d3b\u7528\u4f8b","text":"<ul> <li>Web\u30a2\u30d7\u30ea/API\u30b5\u30fc\u30d0\u30fc\uff08Flask, Django\uff09</li> <li>\u30c7\u30fc\u30bf\u5206\u6790\u30fb\u6a5f\u68b0\u5b66\u7fd2\uff08pandas, scikit-learn, TensorFlow\uff09</li> <li>\u696d\u52d9\u81ea\u52d5\u5316\uff08Excel\u64cd\u4f5c\u3001\u30d5\u30a1\u30a4\u30eb\u5909\u63db\u3001RPA\uff09</li> <li>IoT/\u7d44\u307f\u8fbc\u307f\u958b\u767a\u3001\u6559\u80b2\u73fe\u5834</li> </ul>"},{"location":"python_intro/#python_5","title":"Python\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fb\u60c5\u5831\u6e90","text":"<ul> <li>\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08\u65e5\u672c\u8a9e\u3042\u308a\uff09: https://docs.python.org/ja/3/</li> <li>PyCon JP\uff08\u65e5\u672c\u6700\u5927\u306ePython\u30ab\u30f3\u30d5\u30a1\u30ec\u30f3\u30b9\uff09</li> <li>Qiita\u3001Zenn\u3001teratail\u306a\u3069\u65e5\u672c\u8a9e\u60c5\u5831\u3082\u8c4a\u5bcc</li> </ul> <p>\u300c\u30b7\u30f3\u30d7\u30eb\u3067\u30d1\u30ef\u30d5\u30eb\u300d\u306aPython\u306e\u4e16\u754c\u3092\u3001\u305c\u3072\u4f53\u611f\u3057\u3066\u304f\u3060\u3055\u3044\uff01 </p>"},{"location":"summary/","title":"\u307e\u3068\u3081\u3068\u767a\u5c55","text":""},{"location":"summary/#_2","title":"\u5b66\u7fd2\u306e\u307e\u3068\u3081","text":"<ul> <li>Python/Flask\u306e\u57fa\u790e\u304b\u3089\u5b9f\u8df5\u307e\u3067\u4f53\u7cfb\u7684\u306b\u5b66\u3093\u3060</li> <li>\u73fe\u5834\u3067\u5f79\u7acb\u3064\u30b5\u30f3\u30d7\u30eb\u3084\u30c8\u30e9\u30d6\u30eb\u5bfe\u5fdc\u3082\u7fd2\u5f97</li> <li>API/DB/\u30a8\u30e9\u30fc\u51e6\u7406\u306a\u3069\u5b9f\u52d9\u3067\u5fc5\u9808\u306e\u77e5\u8b58\u3092\u7372\u5f97</li> </ul>"},{"location":"summary/#_3","title":"\u3053\u308c\u304b\u3089\u306e\u5b66\u3073\u65b9\u30ed\u30fc\u30c9\u30de\u30c3\u30d7","text":"<ol> <li>Python\u4e2d\u7d1a\uff08\u30af\u30e9\u30b9\u3001\u4f8b\u5916\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u6d3b\u7528\uff09</li> <li>Flask\u5fdc\u7528\uff08Blueprint\u3001\u8a8d\u8a3c\u3001\u30c6\u30b9\u30c8\u81ea\u52d5\u5316\uff09</li> <li>\u30c7\u30fc\u30bf\u5206\u6790\uff08pandas, matplotlib\uff09</li> <li>\u30af\u30e9\u30a6\u30c9\u30fbDocker\u30fbCI/CD</li> <li>\u30c1\u30fc\u30e0\u958b\u767a\u30fb\u8a2d\u8a08\u30d1\u30bf\u30fc\u30f3</li> </ol>"},{"location":"summary/#faq","title":"\u3088\u304f\u3042\u308b\u8cea\u554f\uff08FAQ\uff09","text":"<ul> <li>Q: \u30a8\u30e9\u30fc\u304c\u51fa\u305f\u3089\u3069\u3046\u3059\u308c\u3070\uff1f</li> <li>A: \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3088\u304f\u8aad\u307f\u3001\u691c\u7d22\u3084\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u6d3b\u7528</li> <li>Q: \u3069\u306e\u30a8\u30c7\u30a3\u30bf\u304c\u826f\u3044\uff1f</li> <li>A: VS Code\u63a8\u5968\u3002Python\u62e1\u5f35\u6a5f\u80fd\u3092\u5165\u308c\u308b\u3068\u4fbf\u5229</li> <li>Q: \u3069\u3053\u3067\u8cea\u554f\u3067\u304d\u308b\uff1f</li> <li>A: Qiita\u3001teratail\u3001Stack Overflow\u306a\u3069</li> </ul>"},{"location":"summary/#_4","title":"\u4fbf\u5229\u306a\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u30fb\u65e5\u672c\u8a9e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3","text":"<ul> <li>Python\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08\u65e5\u672c\u8a9e\uff09</li> <li>Flask\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08\u65e5\u672c\u8a9e\uff09</li> <li>PyCon JP</li> <li>Qiita Python\u30bf\u30b0</li> <li>Zenn Python\u30bf\u30b0</li> <li>teratail Python\u30bf\u30b0</li> </ul> <p>\u5b66\u3073\u7d9a\u3051\u308b\u3053\u3068\u3067\u3001\u3069\u3093\u3069\u3093\u300c\u3067\u304d\u308b\u3053\u3068\u300d\u304c\u5897\u3048\u3066\u3044\u304d\u307e\u3059\uff01 </p>"}]}